{"version":3,"sources":["app/commonURL.ts","slices/lorbSlice.ts","app/hooks.ts","component/atoms/BottunAtom.tsx","component/atoms/TextFieldAtom.tsx","component/atoms/TypographyAtoms.tsx","component/atoms/ListAtom.tsx","component/atoms/SelectAtom.tsx","component/molecules/FormBuilder.tsx","slices/loginSlice.ts","component/organisms/SideNav.tsx","component/molecules/Header.tsx","component/molecules/ListMolecule.tsx","component/molecules/OneDataDisplay.tsx","component/molecules/ApproveAndReject.tsx","component/templates/ShowListOfAnyLorB.tsx","component/templates/NegotiateTemplate.tsx","component/organisms/MypageUser.tsx","slices/userSlice.ts","component/templates/MyPageTemplate.tsx","component/templates/WrapMypageUser.tsx","pages/ApproveCreate/ApproveCreate.tsx","pages/ApproveNegotiate/ApproveNegotiate.tsx","pages/Borrow/Borrow.tsx","pages/Completed/Completed.tsx","pages/CreateLorB/CreateLorB.tsx","pages/Home/Home.tsx","pages/Lend/Lend.tsx","pages/Login/Login.tsx","pages/Register/Register.tsx","pages/Mypage/Mypage.tsx","App.tsx","app/store.ts","reportWebVitals.ts","index.tsx"],"names":["BASE_URL","POST_REGIST_URL","POST_LOGIN_URL","GET_CURRENT_USER_URL","POST_CREATE_LORB","POST_UPDATE_LORB_DETAIL","PUT_APPROVE_CREATE","PUT_REJECT_CREATE","GET_GET_ONMAKING","GET_GET_ONBEING_SUGGESTED","GET_GET_LORB_KEEP_LORB","GET_GET_ALL_LORB","GET_GET_LORB_IHAVE","GET_LORB_COMPLETED","PUT_UPDATE_NEGOTIATE","PUT_REJECT_NEGOTIATE","PUT_DELETE_LORB_TABLE","GET_FOLLOW","POST_FOLLOW_USER","GET_GET_FOLOWER","createLorB","createAsyncThunk","a","title","detailClass","aboutDetail","userTo","userToName","userFrom","userFromName","userForApprove","getState","rejectWithValue","axios","post","res","data","success","approveCreate","id","put","rejectCreate","getOnMaking","get","catch","console","log","onMaking","getOnBeingSuggested","onBeingSuggested","getLorBKeepLorB","keepLorB","getAllLorB","getLorBIhave","getLorBCompleted","updateNogotiate","negotiateItem","negotiateDetail","rejectNegotiate","deleteLorBtable","LorBSlice","createSlice","name","initialState","reducers","setError","state","action","error","payload","extraReducers","builder","addCase","fulfilled","AllLorB","AllLorBIhave","Completed","rejected","actions","SelectOnMaking","lorb","SelectonBeingSuggested","SelectkeepLorB","SelectCompleted","SelectError","useAppDispatch","useDispatch","useAppSelector","useSelector","ButtonAtom","color","onClick","textWillShow","disabled","className","type","index","Button","variant","TextFieldAtom","label","errorText","pattern","control","errors","fullwidth","defaultValue","rules","required","render","field","TextField","fullWidth","Boolean","helperText","undefined","TypographyAtoms","children","align","style","Typography","ListAtom","ListChild","List","map","item","to","ListItem","ListItemIcon","AccountCircle","ListItemText","primary","SelectAtom","selectItems","Select","MenuItem","value","_id","FormBuilder","propsArray","handleFunc","props","key","Box","loginAndFetchUser","email","password","defaults","withCredentials","user","fetchUser","_","loginSlice","logout","SelectUser","login","SideNav","handleFrag","open","theme","useTheme","Drawer","anchor","IconButton","direction","ChevronLeft","ChevronRight","Divider","useStyles","makeStyles","thema","root","flexGrow","header","backgroundColor","button","marginLeft","spacing","logo","fontSize","Header","classes","dispatch","history","useHistory","useState","setOpen","handleFlag","prevState","CssBaseline","AppBar","position","Toolbar","aria-label","edge","Menu","textDecoration","fontWeight","push","ListModule","willShows","text","useEffect","list","box","willShow","LorBBox","OneDataDisplay","TableContainer","component","Paper","Table","TableBody","TableRow","TableCell","rowSpan","ApproveAndReject","willDispatch","reloadFunc","then","handleApproveOrDelete","ShowListOfAnyLorB","items","buttonArray","Array","isArray","length","Container","maxWidth","approve","display","property","margin","textAlign","NegotiateTemplate","willSelect","KeeponProps","KeepOnWillshow","setKeepOnWill","KeepId","setKeepId","setUserFrom","setUserTo","KeepOn","KeepOnChild","Number","useForm","mode","formState","getValues","TypoBox","TypoName","justifyContent","MypageUser","FollowUser","getFollow","followData","getFollower","followerData","userSlice","followUser","followERUser","errorStateFollow","errorStateFollowER","SelectFollowUser","SelectFollowERUser","ButtonsBox","container","SwitchBox","border","width","propsArrayFor","MayPageTemplate","buttonArrays","followUsers","followERUsers","match","useRouteMatch","url","propsPath","path","userInfo","borderRadius","WrapMypageUser","Fragment","buttonProps","ApproveCreate","setItems","ApproveNegotiate","Borrow","useParams","LItems","setLItems","BItems","setBItems","completed","BCompleted","LCompleted","inputFlex","CreateLorB","selectItemsFollow","setselectItemsFollow","newFollowArray","concat","handleSubmit","onSubmit","e","select","about","userToNamePrepare","find","String","userFromNamePrepare","createStyles","padding","paper","palette","secondary","Home","count","ListMolecule","LKeepOn","LCount","BKeepOn","BCount","Lend","Login","errorState","setErrorState","Register","Mypage","MyPageTemplate","App","exact","store","configureStore","reducer","lorbSlice","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"8NAIMA,EAAW,8DAIJC,EAAe,UAAMD,EAAN,kBAEfE,EAAc,UAAMF,EAAN,eAEdG,EAAoB,UAAMH,EAAN,wBAKpBI,EAAgB,UAAMJ,EAAN,oBAEhBK,EAAuB,UAAML,EAAN,0BAEvBM,EAAkB,UAAMN,EAAN,uBAElBO,EAAiB,UAAMP,EAAN,sBAEjBQ,EAAgB,UAAMR,EAAN,qBAEhBS,EAAyB,UAAMT,EAAN,6BAIzBU,GAFY,UAAMV,EAAN,iBAEU,UAAMA,EAAN,0BAEtBW,EAAgB,UAAMX,EAAN,oBAEhBY,EAAkB,UAAMZ,EAAN,yBAElBa,EAAkB,UAAMb,EAAN,0BAElBc,EAAoB,UAAMd,EAAN,yBAEpBe,EAAoB,UAAMf,EAAN,yBAEpBgB,EAAqB,UAAMhB,EAAN,yBAKrBiB,GADS,UAAKjB,EAAL,cACC,UAAMA,EAAN,oBACVkB,EAAgB,UAAMlB,EAAN,oBAChBmB,EAAe,UAAMnB,EAAN,qBC4EfoB,EAAaC,YAI1B,yBAJ0C,uCAK1C,iDAAAC,EAAA,6DAAQC,EAAR,EAAQA,MACAC,EADR,EACQA,YACAC,EAFR,EAEQA,YACAC,EAHR,EAGQA,OACAC,EAJR,EAIQA,WACAC,EALR,EAKQA,SACAC,EANR,EAMQA,aACAC,EAPR,EAOQA,eAPR,EAQUC,SAAUC,EARpB,EAQoBA,gBARpB,kBAUyBC,IAAMC,KAAK9B,EAAkB,CAC7CmB,QACAC,cACAC,cACAC,SACAC,aACAC,WACAC,eACAC,mBAlBT,cAUaK,EAVb,yBAoBeA,EAAIC,KAAKC,SApBxB,yDAsBcL,EAAgB,CAACK,QAAQ,oCAtBvC,yDAL0C,yDA6D7BC,GA5BmBjB,YAKhC,+BALgD,uCAMhD,2CAAAC,EAAA,6DACQC,EADR,EACQA,MACAC,EAFR,EAEQA,YACAC,EAHR,EAGQA,YACAC,EAJR,EAIQA,OACAE,EALR,EAKQA,SACAE,EANR,EAMQA,eANR,EAQUC,SARV,EAQoBC,gBARpB,SASoBC,IAAMC,KAAK7B,EAAyB,CACpDkB,QACAC,cACAC,cACAC,SACAE,WACAE,mBAfJ,cASQK,EATR,yBAiBUA,EAAIC,KAAKC,SAjBnB,2CANgD,yDA4BnBhB,YAK7B,4BAL6C,uCAM7C,qCAAAC,EAAA,6DAEYI,EAFZ,EAEYA,OACAE,EAHZ,EAGYA,SACAW,EAJZ,EAIYA,GAJZ,EAMUR,SANV,EAMoBC,gBANpB,SAOoBC,IAAMO,IAAIlC,EAAoB,CAC9CoB,SACAE,WACAW,OAVJ,cAOQJ,EAPR,yBAYUA,EAAIC,KAAKC,SAZnB,2CAN6C,0DAuBhCI,EAAepB,YAK5B,2BAL4C,uCAM5C,qCAAAC,EAAA,6DACYI,EADZ,EACYA,OACAE,EAFZ,EAEYA,SACAW,EAHZ,EAGYA,GAHZ,EAKUR,SALV,EAKoBC,gBALpB,SAMoBC,IAAMO,IAAIjC,EAAmB,CAC7CmB,SACAE,WACAW,OATJ,cAMQJ,EANR,yBAWUA,EAAIC,KAAKC,SAXnB,2CAN4C,yDAsB/BK,EAAcrB,YAK3B,0BAL2C,sBAM3C,4BAAAC,EAAA,+EAEwBW,IAAMU,IAAInC,GAAkBoC,OAAM,WAAOC,QAAQC,IAAI,qCAF7E,cAEYX,EAFZ,SAGaU,QAAQC,IAAIX,EAAIC,KAAKW,UAHlC,kBAIaZ,GAAOA,EAAIC,KAAKW,UAJ7B,gCAMIF,QAAQC,IAAI,gBANhB,QAQED,QAAQC,IAAI,GARd,0DAaaE,EAAsB3B,YAKnC,kCALmD,sBAMnD,4BAAAC,EAAA,+EAE0BW,IAAMU,IAAIlC,GAC3BmC,OAAM,WAAOC,QAAQC,IAAI,qCAHlC,cAEcX,EAFd,SAIeU,QAAQC,IAAIX,EAAIC,KAAKa,kBAJpC,kBAKed,GAAOA,EAAIC,KAAKa,kBAL/B,gCAOMJ,QAAQC,IAAI,gBAPlB,QASID,QAAQC,IAAI,GAThB,0DAcaI,EAAkB7B,YAK/B,8BAL+C,sBAM/C,4BAAAC,EAAA,+EAE0BW,IAAMU,IAAIjC,GAC3BkC,OAAM,WAAOC,QAAQC,IAAI,qCAHlC,cAEcX,EAFd,yBAKeA,GAAQA,EAAIC,KAAKe,UALhC,gCAOMN,QAAQC,IAAI,gBAPlB,QASID,QAAQC,IAAI,GAThB,0DAcaM,EAAa/B,YAK1B,yBAL0C,sBAM1C,4BAAAC,EAAA,sEACoBW,IAAMU,IAAIhC,GAD9B,cACQwB,EADR,yBAEUA,EAAIC,MAFd,4CAOaiB,EAAehC,YAK5B,2BAL4C,sBAM5C,4BAAAC,EAAA,sEACoBW,IAAMU,IAAI/B,GAD9B,cACQuB,EADR,yBAEUA,EAAIC,MAFd,4CAQakB,EAAmBjC,YAKhC,+BALgD,sBAMhD,4BAAAC,EAAA,sEACoBW,IAAMU,IAAI9B,GAD9B,cACQsB,EADR,yBAEUA,EAAIC,MAFd,4CAOamB,EAAkBlC,YAK/B,8BAL+C,uCAM/C,uCAAAC,EAAA,6DACIM,EADJ,EACIA,SACAF,EAFJ,EAEIA,OACA8B,EAHJ,EAGIA,cACAC,EAJJ,EAIIA,gBACAlB,EALJ,EAKIA,GALJ,SAOoBN,IAAMO,IAAI1B,EAAqB,CAC/Cc,WACAF,SACA8B,gBACAC,kBACAlB,OAZJ,cAOQJ,EAPR,yBAcUA,EAAIC,KAAKC,SAdnB,2CAN+C,uDAyBlCqB,EAAkBrC,YAK/B,2BAL+C,uCAM/C,qCAAAC,EAAA,6DACYI,EADZ,EACYA,OACAE,EAFZ,EAEYA,SACAW,EAHZ,EAGYA,GAHZ,EAKUR,SALV,EAKoBC,gBACpBa,QAAQC,IAAI,yEANZ,SAOoBb,IAAMO,IAAIzB,EAAsB,CAChDW,SACAE,WACAW,OAVJ,cAOQJ,EAPR,yBAYUA,EAAIC,KAAKC,SAZnB,2CAN+C,yDAuBlCsB,EAAkBtC,YAK/B,8BAL+C,uCAM/C,mCAAAC,EAAA,6DACII,EADJ,EACIA,OACAE,EAFJ,EAEIA,SACAW,EAHJ,EAGIA,GAHJ,SAKoBN,IAAMO,IAAIxB,EAAsB,CAChDU,SACAE,WACAW,OARJ,cAKQJ,EALR,yBAUUA,EAAIC,KAAKC,SAVnB,2CAN+C,uDAqBlCuB,EAAYC,YAAY,CACrCC,KAAK,OACLC,aAxR0B,GAyR1BC,SAAS,CACLC,SAAS,SAACC,EAAMC,GACZD,EAAME,MAAQD,EAAOE,UAG7BC,cAAe,SAACC,GACZA,EACCC,QAAQ9B,EAAY+B,WAAW,SAACP,EAAOC,GACpCD,EAAMnB,SAAWoB,EAAOE,WAE3BG,QAAQxB,EAAoByB,WAAW,SAACP,EAAOC,GAC5CD,EAAMjB,iBAAmBkB,EAAOE,WAEnCG,QAAQtB,EAAgBuB,WAAW,SAACP,EAAOC,GACxCD,EAAMf,SAAWgB,EAAOE,WAE3BG,QAAQpB,EAAWqB,WAAW,SAACP,EAAOC,GACnCD,EAAMQ,QAAUP,EAAOE,WAE1BG,QAAQnB,EAAaoB,WAAW,SAACP,EAAOC,GACrCD,EAAMS,aAAeR,EAAOE,WAE/BG,QAAQlB,EAAiBmB,WAAW,SAACP,EAAOC,GACzCD,EAAMU,UAAYT,EAAOE,WAE5BG,QAAQpD,EAAWyD,UAAU,SAACX,EAAOC,GAClCD,EAAME,MAAQD,EAAOE,cAMdJ,EAAaL,EAAUkB,QAAvBb,SAEFc,EAAiB,SAACb,GAAD,OAAqBA,EAAMc,KAAKjC,UACjDkC,EAAyB,SAACf,GAAD,OAAqBA,EAAMc,KAAK/B,kBACzDiC,EAAiB,SAAChB,GAAD,OAAqBA,EAAMc,KAAK7B,UAGjDgC,GAAkB,SAACjB,GAAD,OAAqBA,EAAMc,KAAKJ,WAClDQ,GAAc,SAAClB,GAAD,OAAqBA,EAAMc,KAAKZ,OAE5CR,KAAf,Q,SCzbayB,GAAiB,kBAAMC,gBACvBC,GAAkDC,K,+CC6B/CC,GArBc,SAAC,GAQxB,IAPHC,EAOE,EAPFA,MACAC,EAME,EANFA,QACAC,EAKE,EALFA,aACAC,EAIE,EAJFA,SACAC,EAGE,EAHFA,UAEAC,GACE,EAFFC,MAEE,EADFD,MAEA,OACI,eAACE,GAAA,EAAD,CAAQN,QAASA,EACTE,SAAUA,EACVH,MAAOA,EACPQ,QAAQ,YACRJ,UAAWA,EACXC,KAAMA,EALd,SAMaH,K,mBC8BLO,GAzCiB,SAAC,GAS3B,IARHC,EAQE,EARFA,MACAC,EAOE,EAPFA,UACAvC,EAME,EANFA,KACAwC,EAKE,EALFA,QACAC,EAIE,EAJFA,QACAC,EAGE,EAHFA,OACAC,EAEE,EAFFA,UACAX,EACE,EADFA,UAIA,OACI,sBAAKA,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAWK,cAA3B,SACI,eAAC,KAAD,CACII,QAASA,EACTG,aAAa,GACb5C,KAAMA,EACN6C,MAAO,CACHC,UAAS,EACTN,QAAQA,GAEZO,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACJ,eAACC,GAAA,EAAD,6BACYD,GADZ,IAEQE,UAAWP,EACXL,MAAOA,EACPhC,MAAO6C,QAAQT,EAAO1C,IACtBoD,gBAA8BC,IAAjBX,EAAO1C,MAEmC,aAAtB0C,EAAO1C,GAAMiC,KAAsB,6CAAU,MACvB,YAAtBS,EAAO1C,GAAMiC,KAAb,UAAqCM,GAAY,c,SChB9Fe,GAnBmB,SAAC,GAM7B,IALHC,EAKE,EALFA,SACAnB,EAIE,EAJFA,QACAoB,EAGE,EAHFA,MACAC,EAEE,EAFFA,MACAzB,EACE,EADFA,UAEA,OACI,eAAC0B,GAAA,EAAD,CACItB,QAASA,EACToB,MAAOA,EACPC,MAAOA,EACPzB,UAAWA,EAJf,SAMKuB,K,kDCYGI,GArBe,SAAC,GAEzB,IADHC,EACE,EADFA,UAEA,OACI,eAACC,GAAA,EAAD,UAEQD,EAAUE,KAAI,SAACC,EAAM7B,GAAP,OACV,eAAC,IAAD,CAAM8B,GAAG,UAAT,SACI,gBAACC,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,UACgB,IAAVhC,GAAe,eAACiC,GAAA,EAAD,MAErB,eAACC,GAAA,EAAD,CAAcC,QAASN,QALP7B,S,oBC6B5BoC,GApCc,SAAC,GASzB,EARFhC,MAQG,IAPHtC,EAOE,EAPFA,KAEAyC,GAKE,EANFD,QAME,EALFC,SAGAT,GAEE,EAJFU,OAIE,EAHFC,UAGE,EAFFX,WACAuC,EACE,EADFA,YAIA,OACI,sBAAKvC,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAWK,cAA3B,SACI,eAAC,KAAD,CACII,QAASA,EACTzC,KAAMA,EACN4C,aAAa,GACbG,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACJ,eAACwB,GAAA,EAAD,6BACYxB,GADZ,aAIQuB,EAAYT,KAAI,SAACC,GACb,OACI,eAACU,GAAA,EAAD,CAAWC,MAAOX,EAAKY,IAAvB,SAA4CZ,EAAK/D,MAAhB+D,EAAKY,iBCoB3DC,GAlCe,SAAC,GAOxB,IANHC,EAME,EANFA,WACApC,EAKE,EALFA,QACAC,EAIE,EAJFA,OACAoC,EAGE,EAHFA,WACAhD,EAEE,EAFFA,aACAE,EACE,EADFA,UAKA,OACI,qCACI,kCAEQ6C,EAAWf,KAAI,SAACiB,EAAO7C,GAAR,OACX,wBAAC,GAAD,6BACY6C,GADZ,IAEQtC,QAASA,EACTC,OAAQA,EACRsC,IAAK9C,EACLF,UAAWA,QAKvB,eAACiD,GAAA,EAAD,CAAKjD,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAWiD,IAA3B,SACI,eAAC,GAAD,CAAYpD,QAAS,kBAAMiD,KAAclD,MAAO,UAAWE,aAAcA,Y,kDCxBpFoD,GAAoB3H,YAI7B,+BAJ6C,uCAK7C,uCAAAC,EAAA,6DAAQ2H,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAf,EAA2BnH,SAA3B,EAAqCC,gBAArC,SAC0BC,IAAMC,KAAKhC,EAAgB,CAC7C+I,QACAC,aAHR,oBACW9G,EADX,EACWA,MAIEC,QALb,yCAMeD,EAAKC,SANpB,uBASQJ,IAAMkH,SAASC,iBAAkB,EATzC,UAU4BnH,IAAMU,IAAIxC,GAVtC,eAUegC,EAVf,OAWQU,QAAQC,IAAIX,GAXpB,kBAYeA,EAAIC,KAAKiH,MAZxB,kCAcQxG,QAAQC,IAAI,GAdpB,0DAL6C,yDAyBpCwG,GAAYjI,YAIrB,uBAJqC,uCAKrC,WAAOkI,EAAP,oBAAAjI,EAAA,6DAAWU,EAAX,EAAWA,gBAAX,SAEQC,IAAMkH,SAASC,iBAAkB,EAFzC,SAG4BnH,IAAMU,IAAIxC,GAHtC,WAIgC,KADjBgC,EAHf,QAIeC,KAAKC,QAJpB,yCAKmB,CAACyB,KAAK,GAAGvB,GAAG,KAL/B,cAOQM,QAAQC,IAAIX,GAPpB,kBAQeA,EAAIC,KAAKiH,MARxB,2DAUerH,EAAgB,CAAC8B,KAAK,GAAG2E,IAAI,MAV5C,0DALqC,yDAqB5Be,GAAa3F,YAAY,CAClCC,KAAK,QACLC,aAxDuB,CACvBsF,KAAK,CACDvF,KAAK,GACL2E,IAAI,KAsDRzE,SAAS,CACLyF,OAAO,SAACvF,GACJrB,QAAQC,IAAIoB,GACZA,EAAMmF,KAAO,CAACvF,KAAK,GAAG2E,IAAI,MAGlCnE,cAAe,SAACC,GACZA,EACCC,QAAQwE,GAAkBvE,WAAU,SAACP,EAAOC,GACzCD,EAAMmF,KAAOlF,EAAOE,WAGxBE,EACCC,QAAQ8E,GAAU7E,WAAW,SAACP,EAAOC,GAAY,IAAD,EACvBA,EAAOE,QAArBP,EADqC,EACrCA,KAAM2E,EAD+B,EAC/BA,IACdvE,EAAMmF,KAAO,CAACvF,OAAM2E,UAEvBjE,QAAQ8E,GAAUzE,UAAU,SAACX,EAAOC,QACXgD,IAAnBhD,EAAOE,UACNH,EAAMmF,KAAOlF,EAAOE,eAMrBoF,GAAWD,GAAW1E,QAAtB2E,OACFC,GAAa,SAACxF,GAAD,OAAqBA,EAAMyF,MAAMN,MAE5CG,MAAf,Q,iDC/DeI,GA9BW,SAAC,GAGpB,IAFHC,EAEE,EAFFA,WACAC,EACE,EADFA,KAEMC,EAAQC,eACRX,EAAO9D,GAAemE,IAE5B,OACI,qCACI,gBAACO,GAAA,EAAD,CACI/D,QAAQ,aACRgE,OAAO,OACPJ,KAAMA,EAHV,UAKI,+BACI,eAACK,GAAA,EAAD,CAAYxE,QAASkE,EAArB,SACyB,QAApBE,EAAMK,UAAsB,eAACC,GAAA,EAAD,IAAe,eAACC,GAAA,EAAD,QAGpD,eAACC,GAAA,EAAD,IAEA,eAAC,GAAD,CAAU7C,UAAW,CAAC2B,EAAKvF,cCtBrC0G,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,GAEdC,OAAQ,CACJC,gBAAgB,UAEpBC,OAAQ,CACJC,WAAYN,EAAMO,QAAQ,IAE9BC,KAAK,CACDC,SAAU,OACVP,SAAS,OA8FFQ,GA1FA,WACX,IAAMC,EAAUb,KACVnB,EAAO9D,GAAemE,IACtB4B,EAAWjG,KACXkG,EAAUC,cAJC,EAKOC,oBAAkB,GALzB,mBAKV3B,EALU,KAKJ4B,EALI,KAYXC,EAAa,WACfD,GAAQ,SAAAE,GACJ,OAAQA,MAMhB,OACI,uBAAK9F,UAAWuF,EAAQV,KAAxB,UACI,eAACkB,GAAA,EAAD,IACA,eAACC,GAAA,EAAD,CAAQC,SAAS,SAASjG,UAAWuF,EAAQR,OAA7C,SACI,gBAACmB,GAAA,EAAD,WACI,eAAC7B,GAAA,EAAD,CACQzE,MAAM,UACNuG,aAAW,cACXC,KAAK,QACLvG,QAASgG,EAJjB,SAMQ,eAACQ,GAAA,EAAD,MAER,eAAC3E,GAAA,EAAD,CAAYtB,QAAQ,KAAKJ,UAAWuF,EAAQH,KAA5C,SACI,eAAC,IAAD,CAAMpD,GAAG,IAAIP,MAAO,CACI6E,eAAgB,OAChBC,WAAW,OACXrB,WAAW,QAHnC,0CASJ,+BACK3B,GAAQA,EAAKvF,MAAQ,6DAAWuF,EAAKvF,KAAhB,oBAIlBuF,EAAKvF,MACL,eAAC,GAAD,CACQ6B,QAAS,kBAAM4F,EAAQe,KAAK,gBAC5B5G,MAAO,UACPE,aAAc,uCACdE,UAAWuF,EAAQN,SAK3B1B,EAAKvF,MACL,eAAC,GAAD,CACQ6B,QAAS,kBAAM4F,EAAQe,KAAK,eAC5B5G,MAAO,UACPE,aAAc,uCACdE,UAAWuF,EAAQN,SAK3B1B,EAAKvF,KACL,eAAC,GAAD,CACQ6B,QAAS,kBA9DrC2F,EAAS7B,WACT8B,EAAQe,KAAK,MA8De5G,MAAO,UACPE,aAAc,iCACdE,UAAWuF,EAAQN,SAE3B,eAAC,GAAD,CACQpF,QAAS,kBAAM4F,EAAQe,KAAK,WAC5B5G,MAAO,UACPE,aAAc,2BACdE,UAAWuF,EAAQN,cAM3C,eAAC,GAAD,CAASlB,WAAY8B,EAAY7B,KAAMA,QCrDnCyC,GA3Cc,SAAC,GAKxB,IAJHC,EAIE,EAJFA,UACAC,EAGE,EAHFA,KACA3G,EAEE,EAFFA,UACA6E,EACE,EADFA,KAOA,OAJA+B,qBAAU,WACN7J,QAAQC,IAAI0J,EAAU,iDAItB,uBAAK1G,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAW6G,KAA3B,UACQ,eAAC,GAAD,CACQzG,QAAS,QACToB,MAAM,SACNxB,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAW8G,IAH9B,SAIKH,IAIT,eAAC9E,GAAA,EAAD,UAEQ6E,EAAU5E,KAAI,SAACiF,EAAc7G,GAC1B,OACK,eAAC+B,GAAA,EAAD,CAAsBjC,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAW8G,IAA5C,SACI,eAAC,IAAD,CAAM9E,GAAE,WAAM6C,EAAN,YAAc3E,GAASuB,MAAO,CAAC6E,eAAgB,QAAvD,SACI,eAAClE,GAAA,EAAD,CACQC,QAAS0E,EAASC,QAAQvL,MAC1BuE,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAW8G,SAJvB5G,Y,4DCuC5B+G,GApEmB,SAAC,GAG5B,IAFHlF,EAEE,EAFFA,KACA/B,EACE,EADFA,UAMA,OACI,qCACM+B,GACM,sBAAK/B,UAAWA,EAAhB,SACI,eAACkH,GAAA,EAAD,CAAgBC,UAAWC,KAA3B,SACI,eAACC,GAAA,EAAD,UACI,gBAACC,GAAA,EAAD,WACI,gBAACC,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAWhG,MAAM,SAAjB,sCAGA,eAACgG,GAAA,EAAD,CAAWhG,MAAM,SAAjB,SACKO,EAAKiF,QAAQvL,QAElB,eAAC+L,GAAA,EAAD,IACA,eAACA,GAAA,EAAD,OAEJ,gBAACD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAWC,QAAS,EAAGjG,MAAM,SAA7B,kDAGA,gBAACgG,GAAA,EAAD,CAAWhG,MAAM,SAAjB,+BACQO,EAAKiF,QAAQtL,eAErB,eAAC8L,GAAA,EAAD,IACA,eAACA,GAAA,EAAD,OAGJ,gBAACD,GAAA,EAAD,WACI,gBAACC,GAAA,EAAD,CAAWhG,MAAM,SAAjB,uDACYO,EAAKiF,QAAQrL,eAEzB,eAAC6L,GAAA,EAAD,IACA,eAACA,GAAA,EAAD,OAIJ,gBAACD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAWhG,MAAM,SAAjB,kDAGA,gBAACgG,GAAA,EAAD,CAAWhG,MAAM,SAAjB,qCACSO,EAAKhG,gBAEd,eAACyL,GAAA,EAAD,CAAWhG,MAAM,SAAjB,oBAGA,gBAACgG,GAAA,EAAD,CAAWhG,MAAM,SAAjB,qCACSO,EAAKlG,6BCbtC6L,GA3CoB,SAAC,GAQ9B,IAPH9H,EAOE,EAPFA,MACAE,EAME,EANFA,aACAE,EAKE,EALFA,UACA+B,EAIE,EAJFA,KACA4F,EAGE,EAHFA,aAEAC,GACE,EAFF1H,MAEE,EADF0H,YAGMpC,EAAWjG,KAsBjB,OACI,eAAC,GAAD,CACAO,aAAcA,EACdE,UAAWA,EACXH,QAAS,kBAxBiB,WAC1B,QAAsBwB,KAAf,OAAJU,QAAI,IAAJA,OAAA,EAAAA,EAAMjG,gBACcuF,IAAhBU,EAAKnG,aACgByF,IAArBU,EAAKiF,QAAQrE,IAAkB,CAClC,IAAMpE,EAAuC,CACzC3C,OAAOmG,EAAKnG,OACZE,SAASiG,EAAKjG,SACdW,GAAGsF,EAAKiF,QAAQrE,KAEpB5F,QAAQC,IAAI2K,GACZ5K,QAAQC,IAAIuB,GACZiH,EAASmC,EAAapJ,IAAUsJ,MAAK,WACjCrC,EAASoC,SAYFE,IACflI,MAAOA,KCuBAmI,GAnDsB,SAAC,GAM/B,IALHxG,EAKE,EALFA,SACAgE,EAIE,EAJFA,QACAyC,EAGE,EAHFA,MACAC,EAEE,EAFFA,YACAL,EACE,EADFA,WAMA,OAJAhB,qBAAU,WACN7J,QAAQC,IAAIgL,MAIZ,qCACMA,GAAUE,MAAMC,QAAQH,IAAU7G,QAAQ6G,EAAMI,QAAhD,OACGJ,QADH,IACGA,OADH,EACGA,EAAOlG,KAAI,SAACC,EAAM7B,GACf,OACA,gBAACmI,GAAA,EAAD,CAAuBC,SAAS,KAAhC,UACI,eAAC,GAAD,CAAgBvG,KAAMA,EAAM/B,UAAWuF,EAAQgD,UAC/C,eAACtF,GAAA,EAAD,CAAKuF,QAAQ,OAAQxI,UAAWuF,EAAQuB,IAAxC,SAEQmB,GAEAA,EAAYnG,KAAI,SAAC2G,GACb,OACI,eAAC,GAAD,CACQ3I,aAAc2I,EAAS3I,aACvBE,UAAWuF,EAAQN,OACnBrF,MAAO6I,EAAS7I,MAChBmC,KAAMA,EACN4F,aAAcc,EAASd,aACvBzH,MAAOA,EAEP0H,WAAYA,GADPa,EAAShM,WAf1ByD,MA2BpB,eAAC+C,GAAA,EAAD,UACK1B,OCzDfmD,GAAYC,YAAW,CACzB0D,UAAU,CACNK,OAAO,cAEXzD,OAAO,CACHyD,OAAO,cAEXrI,cAAc,CACVqI,OAAO,aACPC,UAAU,UAEd1F,IAAI,CACA0F,UAAU,WAWZ9F,GAA6B,CAC/B,CACIvC,MAAM,uCACNtC,KAAK,gBACLuC,UAAU,4EAEd,CACID,MAAM,2BACNtC,KAAK,kBACLuC,UAAU,iEA4EHqI,GAlE6B,SAAC,GAItC,IAHHnM,EAGE,EAHFA,GACAoM,EAEE,EAFFA,WACAC,EACE,EADFA,YAEMvD,EAAUb,KACVe,EAAUC,cACVF,EAAWjG,KAHf,EAIsCoG,qBAJtC,mBAIKoD,EAJL,KAIqBC,EAJrB,OAK0BrD,mBAA6B,IALvD,mBAKKsD,EALL,KAKaC,EALb,OAM+BvD,mBAA6B,IAN5D,mBAMK7J,EANL,KAMgBqN,EANhB,OAO2BxD,mBAA6B,IAPxD,mBAOK/J,EAPL,KAOcwN,EAPd,KAQIC,EAA4B5J,GAAeoJ,GACjDjC,qBAAU,WACN,IAAM0C,EAAcD,GAAWA,EAAOP,GAClCQ,GAAeN,EAAcM,EAAYC,OAAO9M,OACtD,CAAC4M,EAAQ5M,EAAIqM,IACflC,qBAAU,WAAO,IAAD,EACZsC,EAAS,OAACH,QAAD,IAACA,GAAD,UAACA,EAAgB/B,eAAjB,aAAC,EAAyBrE,KACnCwG,EAAW,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAgBjN,UAC5BsN,EAAS,OAACL,QAAD,IAACA,OAAD,EAACA,EAAgBnN,UAC3B,CAACmN,IAjBF,MAkBiDS,aAAqB,CACpEC,KAAK,QADU/I,EAlBjB,EAkBMgJ,UAAWhJ,OAAUD,EAlB3B,EAkB2BA,QAASkJ,EAlBpC,EAkBoCA,UAwBtC,OACI,qCAEQZ,GACA,gBAACV,GAAA,EAAD,CAAWC,SAAS,KAApB,UACI,eAAC,GAAD,CAAgBvG,KAAMgH,EAAgB/I,UAAWuF,EAAQ8C,YAEzD,eAAC,GAAD,CACKxF,WAAYA,GACZpC,QAASA,EACTC,OAAQA,EACRoC,WA/BF,WAAO,IAAD,EACqB6G,IAAlCjM,EADa,EACbA,cAAeC,EADF,EACEA,gBAGnBD,GACAC,GAHOsL,GAKPnN,GACAF,GACI4J,EAAS/H,EAAgB,CACrB3B,WACAF,SACA8B,gBACAC,kBACAlB,GAZDwM,KAePxD,EAAQe,KAAK,MAeA1G,aAAa,eACbE,UAAWuF,UC7G9Bb,I,OAAYC,aAAW,SAACC,GAAD,MAAY,CACrCgF,QAAS,CACLlB,OAAO,iBAEXmB,SAAS,CACLxE,SAAS,OACTkB,WAAW,QAEfgC,QAAQ,CACJG,OAAO,cAEXzD,OAAO,CACHyD,OAAO,cAEX5B,IAAI,CACA4B,OAAO,aACPoB,eAAe,mBAsCRC,GA5Bc,SAAC,GAEvB,IADHxG,EACE,EADFA,KAGMgC,EAAUb,KAChB,OACI,qCACI,gBAACzB,GAAA,EAAD,WAEI,eAAC,GAAD,CACY7C,QAAS,QACToB,MAAM,OACNxB,UAAWuF,EAAQsE,SAH/B,iCAKqBtG,EAAKvF,QAG1B,eAAC,GAAD,CACYoC,QAAS,YACToB,MAAM,OAFlB,2BAIe+B,EAAKZ,aCfvBqH,GAAazO,YAM1B,uBAN0C,uCAO1C,WAAO4H,EAAP,oBAAA3H,EAAA,+DAAeS,SAAUC,EAAzB,EAAyBA,gBAAzB,SAGOC,IAAMkH,SAASC,iBAAkB,EACjCvG,QAAQC,IAAImG,GAJnB,SAK2BhH,IAAMC,KAAKhB,EAAkB+H,GALxD,WAO+B,KAFjB9G,EALd,QAOcC,KAAKC,QAPnB,yCAQeL,EAAgB,2DAR/B,gCAUcG,EAAIC,KAAKC,SAVvB,2DAYcL,EAAgB,2DAZ9B,0DAP0C,yDAyB7B+N,GAAY1O,YAIzB,sBAJyC,uCAKzC,WAAOkI,EAAP,oBAAAjI,EAAA,6DAAWU,EAAX,EAAWA,gBAAX,SAEOC,IAAMkH,SAASC,iBAAkB,EAFxC,SAG2BnH,IAAMU,IAAI1B,GAHrC,UAGckB,EAHd,OAIOU,QAAQC,IAAIX,EAAI,+CACQ,IAArBA,EAAIC,KAAKC,QALnB,yCAMeL,EAAgB,2DAN/B,gCAQcG,EAAIC,KAAK4N,YARvB,2DAUchO,EAAgB,2DAV9B,0DALyC,yDAqB5BiO,GAAc5O,YAI3B,wBAJ2C,uCAK3C,WAAOkI,EAAP,oBAAAjI,EAAA,+DAAWS,SAAUC,EAArB,EAAqBA,gBAArB,SAGOC,IAAMkH,SAASC,iBAAkB,EAHxC,SAI2BnH,IAAMU,IAAIxB,GAJrC,cAIcgB,EAJd,OAKOU,QAAQC,IAAIX,EAAI,oDALvB,kBAMcA,EAAIC,KAAK8N,cANvB,2DAQclO,EAAgB,2DAR9B,0DAL2C,yDAqB9BmO,GAAYtM,YAAY,CACrCC,KAAK,OACLC,aA7E+B,CAC3BqM,WAAW,GACXC,aAAa,GACbC,iBAAiB,GACjBC,mBAAmB,IA0EvBvM,SAAS,GAETM,cAAe,SAACC,GACbA,EACCC,QAAQuL,GAAUtL,WAAU,SAACP,EAAOC,GACjCtB,QAAQC,IAAIqB,GACZD,EAAMkM,WAAajM,EAAOE,WAE7BG,QAAQuL,GAAUlL,UAAU,SAACX,EAAOC,QACXgD,IAAnBhD,EAAOE,UACNH,EAAMoM,iBAAmBnM,EAAOE,YAGvCG,QAAQyL,GAAYxL,WAAU,SAACP,EAAOC,GACtCD,EAAMmM,aAAelM,EAAOE,WAE5BG,QAAQyL,GAAYpL,UAAU,SAACX,EAAOC,QAChBgD,IAAnBhD,EAAOE,UACNH,EAAMqM,mBAAqBpM,EAAOE,eAO7BmM,GAAmB,SAACtM,GAAD,OAAqBA,EAAMmF,KAAK+G,YACnDK,GAAqB,SAACvM,GAAD,OAAqBA,EAAMmF,KAAKgH,cAEnDF,MAAf,Q,UC9GM3F,GAAYC,cAAW,SAACC,GAAD,MAAY,CACrCK,OAAO,CACHyD,OAAO,cAEXkC,WAAW,CACPlC,OAAO,aACPoB,eAAe,cAEnBe,UAAU,CACNnC,OAAO,cAEXzF,IAAI,CACAyF,OAAO,cAEXoC,UAAU,CACNC,OAAO,oBACPC,MAAM,WAIRC,GAA8B,CAChC,CACI3K,MAAM,6CACNtC,KAAK,QACLuC,UAAU,6CACVC,QAAQ,UA2FD0K,GAnFmB,SAAC,GAE5B,IADHC,EACE,EADFA,aAEM5H,EAAO9D,GAAemE,IACtB2B,EAAUb,KACV0G,EAAc3L,GAAeiL,IAC7BW,EAAgB5L,GAAekL,IAC/BnF,EAAWjG,KACX+L,EAAQC,cANZ,EAOkD/B,aAAqB,CACrEC,KAAK,QADU/I,EAPjB,EAOMgJ,UAAWhJ,OAAUD,EAP3B,EAO2BA,QAASkJ,EAPpC,EAOoCA,UAItC/C,qBAAU,WACNpB,EAASyE,MACTzE,EAAS2E,QACX,CAAC3E,IAQH,OACI,qCACI,gBAAC6C,GAAA,EAAD,CAAWrI,UAAWuF,EAAQsF,UAA9B,UACI,eAAC,GAAD,CAAYtH,KAAMA,IACV,gBAACN,GAAA,EAAD,WACQ,eAACA,GAAA,EAAD,UACI,eAAC,GAAD,CACIJ,WAAYoI,GACZxK,QAASA,EACTX,aAAc,uCACdY,OAAQA,EACRoC,WAjBjB,WACf,IAAMK,EAAQwG,IACd5M,QAAQC,IAAImG,GACZqC,EAASwE,GAAW7G,KAeYnD,UAAWuF,MAGnB,eAACtC,GAAA,EAAD,CAAKuF,QAAQ,OAAQxI,UAAWuF,EAAQqF,WAAxC,SAEQO,GAEAA,EAAarJ,KAAI,SAAC2G,GACd,OACI,eAAC,IAAD,CACIzG,GAAE,UAAKsJ,EAAME,IAAX,YAAkB/C,EAASgD,WAE7BhK,MAAO,CAAC6E,eAAgB,QAH5B,SAKI,eAAC,GAAD,CACQxG,aAAc2I,EAAS3I,aACvBE,UAAWuF,EAAQN,OACnBrF,MAAO6I,EAAS7I,MAChB+H,aAAcc,EAASd,gBAP1Bc,EAAShM,SAelC,eAACwG,GAAA,EAAD,UACQ,gBAAC,IAAD,WACI,eAAC,IAAD,CACIyI,KAAI,UAAKJ,EAAMI,KAAX,eADR,SAGI,eAAC,GAAD,CAAgBC,SAAUP,MAG9B,eAAC,IAAD,CACIM,KAAI,UAAKJ,EAAMI,KAAX,iBADR,SAGI,eAAC,GAAD,CAAgBC,SAAUN,oBCtHpE3G,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCkG,UAAU,CACNC,OAAO,oBACPC,MAAM,MACNY,aAAa,WA+BNC,GA3BkB,SAAC,GAE3B,IADHF,EACE,EADFA,SAEMpG,EAAUb,KAChB,OACI,qCAEgBiH,EAASvD,QAAU,GACnB,eAACnF,GAAA,EAAD,CAAKjD,UAAWuF,EAAQuF,UAAxB,SAEYa,EAAS7J,KAAI,SAACyB,GACd,OACI,gBAAC,IAAMuI,SAAP,WACI,eAAC,GAAD,CACIvI,KAAMA,IAEV,eAACkB,GAAA,EAAD,MAJiBlB,EAAKZ,aChB5D+B,GAAYC,YAAW,CACzB4D,QAAQ,CACJG,OAAO,cAEXzD,OAAO,CACHyD,OAAO,cAEX5B,IAAI,CACA4B,OAAO,aACPoB,eAAe,cAGjBiC,GAA2B,CAC7B,CACIjM,aAAa,eACbF,MAAM,UACN+H,aAAahL,EACbF,GAAG,GAEP,CACIqD,aAAa,eACbF,MAAM,UACN+H,aAAanL,EACbC,GAAG,IA8BIuP,GA1BO,WAClB,IAAMzG,EAAUb,KADQ,EAEEiB,qBAFF,mBAEjBqC,EAFiB,KAEViE,EAFU,KAGlBhP,EAAWwC,GAAeR,GAShC,OANA2H,qBAAU,gBACUvF,IAAbpE,GACCgP,EAAShP,EAASA,YAExB,CAACA,IAGC,qCACI,eAAC,GAAD,CACQgL,YAAa8D,GACbxG,QAASA,EACTyC,MAAOA,EACPJ,WAAYhL,EAJpB,+FCxCN8H,GAAYC,YAAW,CACzB4D,QAAQ,CACJG,OAAO,cAEXzD,OAAO,CACHyD,OAAO,cAEX5B,IAAI,CACA4B,OAAO,gBAGTqD,GAA2B,CAC7B,CACIjM,aAAa,eACbF,MAAM,UACN+H,aAAa/J,EACbnB,GAAG,GAEP,CACIqD,aAAa,eACbF,MAAM,UACN+H,aAAa9J,EACbpB,GAAG,IA8BIyP,GA1BU,WACrB,IAAM3G,EAAUb,KADW,EAEDiB,qBAFC,mBAEpBqC,EAFoB,KAEbiE,EAFa,KAGrB9O,EAAmBsC,GAAeN,GASxC,OANAyH,qBAAU,gBACkBvF,IAArBlE,GACC8O,EAAS9O,EAAiBA,oBAEhC,CAACA,IAGC,qCACI,eAAC,GAAD,CACQ8K,YAAa8D,GACbxG,QAASA,EACTyC,MAAOA,EACPJ,WAAY1K,EAJpB,+FCzCGiP,GAbO,WAAO,IACjB1P,EAAO2P,cAAP3P,GAER,OACI,qCACQ,eAAC,GAAD,CACQA,GAAIA,EACJoM,WAAYzJ,EACZ0J,YAAY,eCE9BpE,GAAYC,YAAW,CACzB4D,QAAQ,CACJG,OAAO,cAEXzD,OAAO,CACHyD,OAAO,cAEX5B,IAAI,CACA4B,OAAO,cAEXjN,MAAM,CACFiN,OAAO,aACPnC,WAAW,UAGbwF,GAA2B,GAwDlBjN,GApDG,WACd,IAAMyG,EAAUb,KACVnB,EAAO9D,GAAemE,IACtB4B,EAAWjG,KAHG,EAIQoG,qBAJR,mBAIb0G,EAJa,KAILC,EAJK,OAKQ3G,qBALR,mBAKb4G,EALa,KAKLC,EALK,KAMdC,EAAYhN,GAAeJ,IAajC,OAXAuH,qBAAU,WACNpB,EAAShI,OACX,CAACgI,EAASjC,IAEZqD,qBAAU,gBACWvF,IAAdoL,IACCD,EAAS,OAACC,QAAD,IAACA,OAAD,EAACA,EAAWA,UAAUC,YAC/BJ,EAAS,OAACG,QAAD,IAACA,OAAD,EAACA,EAAWA,UAAUE,eAErC,CAACF,IAGC,uCACI,eAAC,GAAD,CACQrM,QAAS,QACToB,MAAO,SACPxB,UAAWuF,EAAQ9J,MAH3B,sCAMA,eAAC,GAAD,CACQwM,YAAa8D,GACbxG,QAASA,EACTyC,MAAOqE,EAHf,0EAQA,eAAC,GAAD,CACQjM,QAAS,QACToB,MAAO,SACPxB,UAAWuF,EAAQ9J,MAH3B,sCAMA,eAAC,GAAD,CACQwM,YAAa8D,GACbxG,QAASA,EACTyC,MAAOuE,EAHf,8ECvDN7H,GAAYC,YAAW,CACzBlJ,MAAM,CACFiN,OAAO,cAEXkE,UAAU,CACNpE,QAAQ,QAEZnI,cAAc,CACVqI,OAAO,gBAoKAmE,GA9JI,WACf,IAAMtJ,EAAO9D,GAAemE,IACtBtF,EAAQmB,GAAeH,IACvBgL,EAAa7K,GAAeiL,IAC5BlF,EAAWjG,KACXgG,EAAUb,KALK,EAM6BiB,mBAAsB,IANnD,mBAMdmH,EANc,KAMKC,EANL,KAQrBnG,qBAAU,WACNpB,EAASyE,QACX,IAEFrD,qBAAU,WACN,GAAGrD,GAAQ2E,MAAMC,QAAQmC,GAAY,CACjC,IACM0C,EADe,CAACzJ,GACc0J,OAAO3C,GAC3CyC,EAAqBC,MAE3B,CAACzJ,EAAM+G,IAlBY,MAoB4Cd,aAAqB,CAClFC,KAAK,QADU/I,EApBE,EAoBbgJ,UAAWhJ,OAAUD,EApBR,EAoBQA,QAASkJ,EApBjB,EAoBiBA,UAAWuD,EApB5B,EAoB4BA,aAkDjD,OACI,qCACI,eAAC7E,GAAA,EAAD,CAAWC,SAAS,KAApB,SACQ,uBAAM6E,SAAUD,GAlDf,SAAC5Q,EAAU8Q,GACxB5H,EAASrH,EAAS,CAAC5B,QAAQ,MADO,MAEiBoN,IAA3ClO,EAF0B,EAE1BA,MAAO4R,EAFmB,EAEnBA,OAAQC,EAFW,EAEXA,MAAOxR,EAFI,EAEJA,SAAUF,EAFN,EAEMA,OACpCG,EAAe,GACfF,EAAa,GACbG,EAAwB,GAC5B,GAAGF,IAAaF,EACZ4J,EAASrH,EAAS,CAAC5B,QAAQ,kIACzB,CAEF,GADAQ,QAAQC,IAAI,GACTlB,IAAayH,EAAKZ,IAAK,CAAC,IAAD,EACtB3G,EAAiBF,EACjBC,EAAewH,EAAKvF,KACpB,IAAMuP,EAAiB,UAAGjD,EAAWkD,MAAK,SAACjK,GACvC,OAAOA,EAAKZ,MAAQ8K,OAAO7R,aADR,aAAG,EAEtBoC,KACJuP,IAAsB1R,EAAa0R,GACnCxQ,QAAQC,IAAInB,EAAW,WACpB,GAAID,IAAW2H,EAAKZ,IAAK,CAAC,IAAD,EAC5B5F,QAAQC,IAAI,GACZhB,EAAiBJ,EACjBC,EAAa0H,EAAKvF,KAClB,IAAM0P,EAAmB,UAAGpD,EAAWkD,MAAK,SAACjK,GACzC,OAAOA,EAAKZ,MAAQ8K,OAAO3R,aADN,aAAG,EAExBkC,KACJjB,QAAQC,IAAI0Q,EAAoB,gBAChCA,IAAwB3R,EAAe2R,GACvC3Q,QAAQC,IAAIjB,EAAa,QAE7BgB,QAAQC,IAAIjB,EAAa,QACzBgB,QAAQC,IAAInB,EAAW,MACvB2J,EAASlK,EAAW,CAChBG,QACAC,YAAY2R,EACZ1R,YAAY2R,EACZ1R,SACAC,aACAC,WACAC,eACAC,wBAII,SAAC0E,EAAW0M,GACxB5H,EAASrH,EAAS,CAAC5B,QAAQ,2EAMf,SAEA,gBAAC0G,GAAA,EAAD,CAAK0F,UAAU,SAAf,UACI,uBAAK3I,UAAWuF,EAAQ9J,MAAxB,iBACS6C,QADT,IACSA,OADT,EACSA,EAAO/B,QACR,eAAC,GAAD,CACQkE,QAASA,EACTC,OAAQA,EACR1C,KAAK,QACLsC,MAAM,2BACNK,WAAW,OAI3B,+BACQ,eAAC,GAAD,CACQF,QAASA,EACTC,OAAQA,EACR1C,KAAK,SACLsC,MAAM,eACNK,WAAW,MAG3B,+BACQ,eAAC,GAAD,CACQF,QAASA,EACTC,OAAQA,EACR1C,KAAK,QACLsC,MAAM,eACNK,WAAW,MAI3B,sBAAKX,UAAWuF,EAAQqH,UAAxB,SACQ,eAAC,GAAD,CACQrK,YAAauK,EACbrM,QAASA,EACTC,OAAQA,EACR1C,KAAK,WACLsC,MAAM,uBACNK,WAAW,MAW3B,sBAAKX,UAAWuF,EAAQqH,UAAxB,SACQ,eAAC,GAAD,CACQrK,YAAauK,EACbrM,QAASA,EACTC,OAAQA,EACR1C,KAAK,SACLsC,MAAM,qBACNK,WAAW,MAY3B,eAACsC,GAAA,EAAD,CAAKuF,QAAQ,OAAOsB,eAAe,WAAnC,SACI,eAAC,GAAD,CACQhK,aAAa,eACbF,MAAO,UACPK,KAAK,uB,UC3JnCyE,GAAYC,aAAW,SAACV,GAAD,OACzB0J,aAAa,CACT9G,KAAK,CACD+G,QAAQ,cAEZ9G,IAAI,CACA6B,UAAU,SACViF,QAAQ,IACR9D,eAAe,SACfvD,WAAW,OACXlB,SAAS,QAEbwI,MAAM,CACFjO,MAAOqE,EAAM6J,QAAQnH,KAAKoH,UAC1BH,QAAS3J,EAAMkB,QAAQ,GACvBuD,OAAQ,cAEZjN,MAAM,CACF8K,WAAW,OACXlB,SAAS,aA0HN2I,GArHK,WAChB,IAAMzI,EAAUb,KACVc,EAAWjG,KACXtC,EAAWwC,GAAeR,GAC1B9B,EAAmBsC,GAAeN,GAClC9B,EAAWoC,GAAeL,GAC1BmE,EAAO9D,GAAemE,IAsB5B,OApBAgD,qBAAU,WACNpB,EAAShC,MACTgC,EAAS5I,KACT4I,EAAStI,KACTsI,EAASpI,OACX,CAACoI,IAEHoB,qBAAU,WACN7J,QAAQC,IAAIC,GACJiL,MAAMC,QAAQlL,IACfA,EAASgR,MAAQ,wCACxBlR,QAAQC,IAAImE,QAAQlE,IACpBF,QAAQC,IAAIkL,MAAMC,QAAN,OAAclL,QAAd,IAAcA,OAAd,EAAcA,EAAUA,aACtC,CAACA,IAEH2J,qBAAU,WACN7J,QAAQC,IAAIuG,EAAK,UACnB,CAACA,IAIC,+BAEQA,EAAKZ,KACL,gBAAC0F,GAAA,EAAD,CAAWC,SAAS,KAApB,UACQ,iCACI,sBAAKtI,UAAWuF,EAAQsB,KAAxB,SACI,eAACO,GAAA,EAAD,CAAOpH,UAAWuF,EAAQsI,MAA1B,SAEQ5Q,GACIA,GACDA,EAASgR,MACb,eAAC,IAAD,CAAMjM,GAAG,iBAAiBP,MAAO,CAAC6E,eAAgB,QAAlD,SACK,eAAC,GAAD,CACQlG,QAAQ,QACRoB,MAAM,SACNxB,UAAWuF,EAAQ9J,MAH3B,0BAIQwB,QAJR,IAIQA,OAJR,EAIQA,EAAUgR,MAJlB,kGAOJ,eAAC,GAAD,CACQ7N,QAAQ,QACRoB,MAAM,SACNxB,UAAWuF,EAAQ9J,MAH3B,SAIC,qEAOb,sBAAKuE,UAAWuF,EAAQsB,KAAxB,SACI,eAACO,GAAA,EAAD,CAAOpH,UAAWuF,EAAQsI,MAA1B,SAEQ1Q,GACGA,GACAgE,QAAQhE,EAAiB8Q,OAC7B,eAAC,IAAD,CAAMjM,GAAG,oBAAoBP,MAAO,CAAC6E,eAAgB,QAArD,SACK,eAAC,GAAD,CACQlG,QAAQ,QACRoB,MAAM,SACNxB,UAAWuF,EAAQ9J,MAH3B,0BAIQ0B,QAJR,IAIQA,OAJR,EAIQA,EAAkB8Q,MAJ1B,kGAOJ,eAAC,GAAD,CACQ7N,QAAQ,QACRoB,MAAM,SACNxB,UAAWuF,EAAQ9J,MAH3B,SAIC,wEAST4B,GAEI,uCACI,eAAC+J,GAAA,EAAD,CAAOpH,UAAWuF,EAAQsI,MAA1B,SACQ,eAACK,GAAD,CACYxH,UAAS,OAAErJ,QAAF,IAAEA,OAAF,EAAEA,EAAU8Q,QACrBxH,KAAI,iBAAKtJ,QAAL,IAAKA,OAAL,EAAKA,EAAU+Q,OAAf,0DACJpO,UAAWuF,EACXV,KAAM,WAI1B,eAACuC,GAAA,EAAD,CAAOpH,UAAWuF,EAAQsI,MAA1B,SACQ,eAACK,GAAD,CACQxH,UAAS,OAAErJ,QAAF,IAAEA,OAAF,EAAEA,EAAUgR,QACrB1H,KAAI,iBAAKtJ,QAAL,IAAKA,OAAL,EAAKA,EAAUiR,OAAf,0DACJtO,UAAWuF,EACXV,KAAM,sBCtI/C0J,GAdK,WAAO,IACf9R,EAAO2P,cAAP3P,GACR,OACI,qCAEQ,eAAC,GAAD,CACQA,GAAIA,EACJoM,WAAYzJ,EACZ0J,YAAY,eCuDrB0F,GA1DD,WAOV,IAgBMhJ,EAAWjG,KACXkG,EAAUC,cAxBA,EAyBoBC,mBAAiB,IAzBrC,mBAyBT8I,EAzBS,KAyBGC,EAzBH,OA2BmClF,aAAqB,CACpEC,KAAK,QADU/I,EA3BH,EA2BRgJ,UAAWhJ,OAAUD,EA3Bb,EA2BaA,QAASkJ,EA3BtB,EA2BsBA,UAYtC,OACI,uCACI,6BAAI8E,IACJ,eAAC,GAAD,CAAa5L,WAnCM,CACvB,CACIvC,MAAM,6CACNtC,KAAK,QACLuC,UAAU,6FACVC,QAAQ,SAEZ,CACIF,MAAM,iCACNtC,KAAK,WACLuC,UAAU,iFACVC,QAAQ,2CAyBKC,QAASA,EACTC,OAAQA,EACRoC,WAdF,WAAO,IAAD,EACM6G,IAAnBxG,EADa,EACbA,MAAOC,EADM,EACNA,SACfoC,EAAStC,GAAkB,CAACC,QAAOC,cAClCyE,MAAK,WAAOpC,EAAQe,KAAK,QACzB1J,OAAM,kBAAM4R,EAAc,0EAWV5O,aAAa,6BAE1B,eAAC,IAAD,CACIkC,GAAG,YACHP,MAAO,CAAC6E,eAAgB,QAF5B,kECcGqI,GA9DE,WASb,IATmB,EA6BiBhJ,mBAAiB,IA7BlC,mBA6BZ8I,EA7BY,KA6BAC,EA7BA,KA8BbjJ,EAAUC,cA9BG,EAiCgC8D,aAAqB,CACpEC,KAAK,QADU/I,EAjCA,EAiCXgJ,UAAWhJ,OAAUD,EAjCV,EAiCUA,QAASkJ,EAjCnB,EAiCmBA,UAgBtC,OACI,uCACI,6BAAI8E,IACJ,eAAC,GAAD,CAAa5L,WA3Cc,CAC/B,CACIvC,MAAM,eACNtC,KAAK,OACLuC,UAAU,gEAEd,CACID,MAAM,6CACNtC,KAAK,QACLuC,UAAU,6FACVC,QAAQ,SAEZ,CACIF,MAAM,iCACNtC,KAAK,WACLuC,UAAU,iFACVC,QAAQ,2CA4BKC,QAASA,EACTC,OAAQA,EACRoC,WAlBF,WAAO,IAAD,EACW6G,IAAzB3L,EADc,EACdA,KAAMmF,EADQ,EACRA,MAAOC,EADC,EACDA,SACpBjH,IAAMkH,SAASC,iBAAkB,EACjCnH,IAAMC,KAAKjC,EAAiB,CACxB6D,OACAmF,QACAC,aACDyE,MAAK,kBAAMpC,EAAQe,KAAK,aACxB1J,OAAM,kBAAM4R,EAAc,8DAWZ5O,aAAa,qBC9DhCiM,GAA2B,CAC7B,CACIjM,aAAa,2BACbF,MAAM,UACNnD,GAAG,EACHgP,UAAU,cAEd,CACI3L,aAAa,iCACbF,MAAM,UACNnD,GAAG,EACHgP,UAAU,iBAcHmD,GAVO,WAGlB,OACI,qCACI,eAACC,GAAD,CAAgB1D,aAAcY,QCgC3B+C,OAhCf,WACE,IAAMtJ,EAAWjG,KACXgE,EAAO9D,GAAemE,IAS5B,OARAgD,qBAAU,WACRpB,EAAShC,QACT,CAACgC,IAEHoB,qBAAU,WACR7J,QAAQC,IAAIuG,KACZ,CAACA,IAGD,sBAAKvD,UAAU,MAAf,SACE,gBAAC,IAAD,WACI,eAAC,GAAD,IACA,gBAAC,IAAD,WACI,eAAC,IAAD,CAAO0L,KAAK,UAAWvE,UAAWyH,KAClC,eAAC,IAAD,CAAOlD,KAAK,iBAAiBqD,OAAK,EAAC5H,UAAW6E,KAC9C,eAAC,IAAD,CAAON,KAAK,oBAAoBqD,OAAK,EAAC5H,UAAW+E,KACjD,eAAC,IAAD,CAAOR,KAAK,cAAcqD,OAAK,EAAC5H,UAAWgF,KAC3C,eAAC,IAAD,CAAOT,KAAK,aAAaqD,OAAK,EAAC5H,UAAWrI,KAC1C,eAAC,IAAD,CAAO4M,KAAK,cAAcqD,OAAK,EAAC5H,UAAW0F,KAC3C,eAAC,IAAD,CAAOnB,KAAK,YAAYqD,OAAK,EAAC5H,UAAWoH,KACzC,eAAC,IAAD,CAAO7C,KAAK,SAASqD,OAAK,EAAC5H,UAAWqH,KACtC,eAAC,IAAD,CAAO9C,KAAK,YAAYqD,OAAK,EAAC5H,UAAWwH,KACzC,eAAC,IAAD,CAAOjD,KAAK,IAAIqD,OAAK,EAAC5H,UAAW6G,cC1ClCgB,GAAQC,YAAe,CAClCC,QAAS,CACPrL,MAAMH,GACNxE,KAAKiQ,GACL5L,KAAK8G,MCIM+E,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBzH,MAAK,YAAkD,IAA/C0H,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAAS7O,OACP,eAAC,IAAM+K,SAAP,UACE,eAAC,KAAD,CAAUkD,MAAQA,GAAlB,SACI,eAAC,GAAD,QAGNa,SAASC,eAAe,SAM1BV,O","file":"static/js/main.c52e4eb8.chunk.js","sourcesContent":["\r\n//[リクエストメソッド]_[処理内容]_URL\r\n\r\n// const BASE_URL = 'http://localhost:5000'\r\nconst BASE_URL = 'http://ec2-3-19-217-250.us-east-2.compute.amazonaws.com/api'\r\n\r\n//auth\r\n//ユーザー登録時のURL\r\nexport const POST_REGIST_URL = `${BASE_URL}/auth/register`\r\n//ログイン処理を行う場合のURL\r\nexport const POST_LOGIN_URL = `${BASE_URL}/auth/login`\r\n//ログインユーザーの情報取得時のURL\r\nexport const GET_CURRENT_USER_URL = `${BASE_URL}/auth/getCurrentUser`\r\n\r\n\r\n//LorB\r\n//貸し借りテーブルを作成\r\nexport const POST_CREATE_LORB = `${BASE_URL}/LorB/createLorB`\r\n//貸し借りテーブルに貸し借りを追加\r\nexport const POST_UPDATE_LORB_DETAIL = `${BASE_URL}/LorB/updateLorBDetail`\r\n//貸し借りテーブルの作成、追加の承認\r\nexport const PUT_APPROVE_CREATE = `${BASE_URL}/LorB/approveCreate`\r\n//貸し借りテーブルの作成追加の拒否\r\nexport const PUT_REJECT_CREATE = `${BASE_URL}/LorB/rejectCreate`\r\n//作成中の貸し借りテーブルの取得\r\nexport const GET_GET_ONMAKING = `${BASE_URL}/LorB/getOnMaking`\r\n//交渉中の貸し借りテーブルの取得\r\nexport const GET_GET_ONBEING_SUGGESTED = `${BASE_URL}/LorB/getOnBeingSuggested`\r\n//任意の相手との貸し借りテーブルの取得\r\nexport const GET_GET_LORB = `${BASE_URL}/LorB/getLorB`\r\n//所持している全ての貸し借りテーブルを取得\r\nexport const GET_GET_LORB_KEEP_LORB = `${BASE_URL}/LorB/getLorBKeepLorB`\r\n//自分に関わらず存在している全ての貸し借りデータを全て取得\r\nexport const GET_GET_ALL_LORB = `${BASE_URL}/LorB/getAllLorB`\r\n//状態に関わらず所持している全ての貸し借りを取得\r\nexport const GET_GET_LORB_IHAVE = `${BASE_URL}/LorB/getLorBKeepLorB`\r\n//解消済みの貸し借りデータを取得\r\nexport const GET_LORB_COMPLETED = `${BASE_URL}/LorB/getLorBCompleted`\r\n//交渉の内容を設定または更新\r\nexport const PUT_UPDATE_NEGOTIATE = `${BASE_URL}/LorB/updateNegotiate`\r\n//交渉を承認\r\nexport const PUT_REJECT_NEGOTIATE = `${BASE_URL}/LorB/rejectNegotiate`\r\n//任意の貸し借りデータを論理削除,削除と書いてあるがstateを更新するだけなのでPUTで良い\r\nexport const PUT_DELETE_LORB_TABLE = `${BASE_URL}/LorB/deleteLorBtable`\r\n\r\n\r\n//User\r\nexport const EDIT_USER =`${BASE_URL}/user/edit`;\r\nexport const GET_FOLLOW = `${BASE_URL}/user/getFollow`;\r\nexport const POST_FOLLOW_USER = `${BASE_URL}/user/followUser`;\r\nexport const GET_GET_FOLOWER = `${BASE_URL}/user/getFollower`;","import { \r\n    createAsyncThunk, \r\n    createSlice, \r\n    PayloadAction, \r\n    current\r\n } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../app/store\";\r\nimport axios from \"axios\";\r\nimport {\r\n    POST_CREATE_LORB,\r\n    POST_UPDATE_LORB_DETAIL,\r\n    PUT_APPROVE_CREATE,\r\n    PUT_REJECT_CREATE,\r\n    GET_GET_ONMAKING,\r\n    GET_GET_ONBEING_SUGGESTED,\r\n    // GET_GET_LORB,\r\n    GET_GET_LORB_KEEP_LORB,\r\n    GET_GET_ALL_LORB,\r\n    GET_GET_LORB_IHAVE,\r\n    GET_LORB_COMPLETED,\r\n    PUT_UPDATE_NEGOTIATE,\r\n    PUT_DELETE_LORB_TABLE,\r\n    PUT_REJECT_NEGOTIATE\r\n} from '../app/commonURL';\r\n\r\n\r\n//AsyncThuncのpayloadの型\r\nexport interface approveCreateAction<T> {\r\n    userFrom:T,\r\n    userTo:T,\r\n    id:T\r\n} \r\n\r\nexport interface CreateLorBAction<T>{\r\ntitle:T,\r\ndetailClass:T,\r\naboutDetail:T,\r\nuserTo:T,\r\nuserToName:T,\r\nuserFrom:T,\r\nuserFromName:T,\r\nuserForApprove:T\r\n}\r\n\r\nexport interface updateNegotiateArgs {\r\n    userFrom:string,\r\n    userTo:string\r\n    negotiateItem:string,\r\n    negotiateDetail:string,\r\n    id:string\r\n}\r\n\r\n//ThunkAPIの型\r\nexport interface ErrorResponse {\r\n    success:boolean | string\r\n    }\r\n\r\nexport interface resObj {\r\n    LorBBox: {\r\n        LorBState?: number, \r\n        negotiateItem?: string, \r\n        negotiateDetail?: string, \r\n        userForApprove?: string, \r\n        title:string\r\n        detailClass: string\r\n        aboutDetail:string\r\n        _id?: string\r\n    }\r\n    createTime?: string\r\n    userFrom?: string\r\n    userFromName?:string\r\n    userTo?: string\r\n    userToName?:string\r\n    _id?: string\r\n}\r\n\r\nexport interface onMaking {\r\n    onMaking:Array<resObj>,\r\n    count:number\r\n}\r\n\r\nexport interface onBeingSuggested {\r\n    onBeingSuggested:Array<resObj>,\r\n    count:number\r\n}\r\n\r\nexport interface keepLorB {\r\n    LKeepOn:Array<resObj>,\r\n    LCount:number,\r\n    BKeepOn:Array<resObj>,\r\n    BCount:number\r\n}\r\n\r\nexport interface AllLorB {\r\n    allLorB:unknown\r\n}\r\n\r\nexport interface AllLorBIhave {\r\n    allLorB:unknown\r\n}\r\n\r\nexport interface Completed {\r\n    completed:{\r\n        LCompleted:Array<resObj>\r\n        BCompleted:Array<resObj>\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\ninterface LorB {\r\n    onMaking?:onMaking,\r\n    onBeingSuggested?:onBeingSuggested,\r\n    keepLorB?:keepLorB,\r\n    AllLorB?:AllLorB,\r\n    AllLorBIhave?:AllLorBIhave,\r\n    Completed?:Completed,\r\n    error?:ErrorResponse\r\n}\r\n\r\n\r\nconst initialState:LorB = {\r\n}\r\n\r\n//ログイン処理しユーザーデータを取得\r\nexport const createLorB = createAsyncThunk<boolean, CreateLorBAction<string>,\r\n{ state:RootState,\r\nrejectValue:ErrorResponse \r\n}>(\r\n'createSlice/createLorB',\r\nasync ({title,\r\n        detailClass,\r\n        aboutDetail,\r\n        userTo,\r\n        userToName,\r\n        userFrom,\r\n        userFromName,\r\n        userForApprove},\r\n        { getState ,rejectWithValue }) => {\r\n   try {\r\n       const res = await axios.post(POST_CREATE_LORB, {\r\n         title,\r\n         detailClass,\r\n         aboutDetail,\r\n         userTo,\r\n         userToName,\r\n         userFrom,\r\n         userFromName,\r\n         userForApprove\r\n        })\r\n        return res.data.success\r\n   } catch(err) {\r\n       return rejectWithValue({success:'作成に失敗'})\r\n   }\r\n}\r\n)\r\n\r\n//貸し借りテーブルに貸し借りテーブルの追加\r\nexport const updateLorBDetail = createAsyncThunk<boolean, CreateLorBAction<string>,\r\n{ \r\n    state:RootState,\r\n    rejectValue:ErrorResponse \r\n}>(\r\n'createSlice/updateLorBDetail',\r\nasync ({\r\n        title,\r\n        detailClass,\r\n        aboutDetail,\r\n        userTo,\r\n        userFrom,\r\n        userForApprove\r\n        },\r\n        { getState ,rejectWithValue }) => {\r\n  const res = await axios.post(POST_UPDATE_LORB_DETAIL, {\r\n    title,\r\n    detailClass,\r\n    aboutDetail,\r\n    userTo,\r\n    userFrom,\r\n    userForApprove\r\n   })\r\n   return res.data.success\r\n}\r\n)\r\n\r\n//貸し借りテーブルの作成または追加の承認\r\nexport const approveCreate = createAsyncThunk<boolean, approveCreateAction<string>,\r\n{ \r\n    state:RootState,\r\n    rejectValue:ErrorResponse \r\n}>(\r\n'createSlice/approveCreate',\r\nasync (\r\n        {\r\n            userTo,\r\n            userFrom,\r\n            id        \r\n        },\r\n        { getState ,rejectWithValue }) => {\r\n  const res = await axios.put(PUT_APPROVE_CREATE, {\r\n    userTo,\r\n    userFrom,\r\n    id\r\n   })\r\n   return res.data.success\r\n}\r\n)\r\n\r\n//貸し借りテーブルの作成または追加の拒否\r\nexport const rejectCreate = createAsyncThunk<boolean, approveCreateAction<string>,\r\n{ \r\n    state:RootState,\r\n    rejectValue:ErrorResponse \r\n}>(\r\n'createSlice/rejectCreate',\r\nasync ({\r\n            userTo,\r\n            userFrom,\r\n            id        \r\n        },\r\n        { getState ,rejectWithValue }) => {\r\n  const res = await axios.put(PUT_REJECT_CREATE, {\r\n    userTo,\r\n    userFrom,\r\n    id\r\n   })\r\n   return res.data.success\r\n}\r\n)\r\n\r\n//作成中の貸し借りテーブルの取得\r\nexport const getOnMaking = createAsyncThunk<onMaking, void,\r\n{ \r\n    state:RootState,\r\n    rejectValue:ErrorResponse \r\n}>(\r\n'createSlice/getOnMaking',\r\nasync () => {\r\n  try {\r\n      const res = await axios.get(GET_GET_ONMAKING).catch(() => {console.log('通信エラー')})\r\n      res && console.log(res.data.onMaking)\r\n      return res && res.data.onMaking\r\n  } catch(err) {\r\n    console.log('失敗')\r\n  }\r\n  console.log(9)\r\n}\r\n)\r\n\r\n//交渉中の貸し借りテーブルの削除\r\nexport const getOnBeingSuggested = createAsyncThunk<onBeingSuggested, void,\r\n{ \r\n    state:RootState,\r\n    rejectValue:ErrorResponse \r\n}>(\r\n'createSlice/getOnBeingSuggested',\r\nasync () => {\r\n    try {\r\n        const res = await axios.get(GET_GET_ONBEING_SUGGESTED)\r\n        .catch(() => {console.log('通信エラー')})\r\n        res && console.log(res.data.onBeingSuggested)\r\n        return res && res.data.onBeingSuggested\r\n    } catch(err) {\r\n      console.log('失敗')\r\n    }\r\n    console.log(9)\r\n  }\r\n)\r\n\r\n//継続中の貸し借りテーブルの取得\r\nexport const getLorBKeepLorB = createAsyncThunk<keepLorB, void,\r\n{ \r\n    state:RootState,\r\n    rejectValue:ErrorResponse \r\n}>(\r\n'createSlice/getLorBKeepLorB',\r\nasync () => {\r\n    try {\r\n        const res = await axios.get(GET_GET_LORB_KEEP_LORB)\r\n        .catch(() => {console.log('通信エラー')})\r\n        // res && console.log(res.data.keepLorB)\r\n        return res &&  res.data.keepLorB\r\n    } catch(err) {\r\n      console.log('失敗')\r\n    }\r\n    console.log(9)\r\n  }\r\n)\r\n\r\n//自分だけでなくすべての貸し借りの取得\r\nexport const getAllLorB = createAsyncThunk<AllLorB, void,\r\n{ \r\n    state:RootState,\r\n    rejectValue:ErrorResponse \r\n}>(\r\n'createSlice/getAllLorB',\r\nasync () => {\r\n  const res = await axios.get(GET_GET_ALL_LORB)\r\n   return res.data\r\n}\r\n)\r\n\r\n//自分の所持しているすべての状態の貸し借りテーブルを取得\r\nexport const getLorBIhave = createAsyncThunk<AllLorBIhave, void,\r\n{ \r\n    state:RootState,\r\n    rejectValue:ErrorResponse \r\n}>(\r\n'createSlice/getLorBIhave',\r\nasync () => {\r\n  const res = await axios.get(GET_GET_LORB_IHAVE)\r\n   return res.data\r\n}\r\n)\r\n\r\n\r\n//貸し借りが完了している貸し借りデータの取得\r\nexport const getLorBCompleted = createAsyncThunk<Completed, void,\r\n{ \r\n    state:RootState,\r\n    rejectValue:ErrorResponse \r\n}>(\r\n'createSlice/getLorBCompleted',\r\nasync () => {\r\n  const res = await axios.get(GET_LORB_COMPLETED)\r\n   return res.data\r\n}\r\n)\r\n\r\n//指定した貸し借りの交渉データを作成または更新\r\nexport const updateNogotiate = createAsyncThunk<boolean, updateNegotiateArgs,\r\n{ \r\n    state:RootState,\r\n    rejectValue:ErrorResponse \r\n}>(\r\n'createSlice/updateNogotiate',\r\nasync ({ \r\n    userFrom,\r\n    userTo,\r\n    negotiateItem,\r\n    negotiateDetail,\r\n    id\r\n  }) => {\r\n  const res = await axios.put(PUT_UPDATE_NEGOTIATE,{ \r\n    userFrom,\r\n    userTo,\r\n    negotiateItem,\r\n    negotiateDetail,\r\n    id\r\n  })\r\n   return res.data.success\r\n}\r\n)\r\n\r\n//交渉を拒否\r\nexport const rejectNegotiate = createAsyncThunk<boolean, approveCreateAction<string>,\r\n{ \r\n    state:RootState,\r\n    rejectValue:ErrorResponse \r\n}>(\r\n'createSlice/rejectCreate',\r\nasync ({\r\n            userTo,\r\n            userFrom,\r\n            id        \r\n        },\r\n        { getState ,rejectWithValue }) => {\r\nconsole.log('RejectNegotiateが呼び出されました')\r\n  const res = await axios.put(PUT_REJECT_NEGOTIATE, {\r\n    userTo,\r\n    userFrom,\r\n    id\r\n   })\r\n   return res.data.success\r\n}\r\n)\r\n\r\n//任意の貸し借りデータを論理削除\r\nexport const deleteLorBtable = createAsyncThunk<boolean, approveCreateAction<string>,\r\n{ \r\n    state:RootState,\r\n    rejectValue:ErrorResponse \r\n}>(\r\n'createSlice/deleteLorBtable',\r\nasync ({\r\n    userTo,\r\n    userFrom,\r\n    id\r\n}) => {\r\n  const res = await axios.put(PUT_DELETE_LORB_TABLE,{\r\n    userTo,\r\n    userFrom,\r\n    id\r\n  })\r\n   return res.data.success\r\n}\r\n)\r\n\r\n\r\nexport const LorBSlice = createSlice({\r\nname:'lorb',\r\ninitialState,\r\nreducers:{\r\n    setError:(state,action:PayloadAction<ErrorResponse>) => {\r\n        state.error = action.payload;\r\n    }\r\n},\r\nextraReducers: (builder) => {\r\n    builder\r\n    .addCase(getOnMaking.fulfilled, (state, action) =>{\r\n        state.onMaking = action.payload\r\n    })\r\n    .addCase(getOnBeingSuggested.fulfilled, (state, action) =>{\r\n        state.onBeingSuggested = action.payload\r\n    })\r\n    .addCase(getLorBKeepLorB.fulfilled, (state, action) =>{\r\n        state.keepLorB = action.payload\r\n    })\r\n    .addCase(getAllLorB.fulfilled, (state, action) =>{\r\n        state.AllLorB = action.payload\r\n    })\r\n    .addCase(getLorBIhave.fulfilled, (state, action) =>{\r\n        state.AllLorBIhave = action.payload\r\n    })\r\n    .addCase(getLorBCompleted.fulfilled, (state, action) =>{\r\n        state.Completed = action.payload\r\n    })\r\n    .addCase(createLorB.rejected, (state, action) => {\r\n        state.error = action.payload\r\n    })\r\n}\r\n})\r\n\r\n// export const { updateOnMaking } = LorBSlice.actions;\r\nexport const { setError } = LorBSlice.actions\r\n\r\nexport const SelectOnMaking = (state:RootState) => state.lorb.onMaking\r\nexport const SelectonBeingSuggested = (state:RootState) => state.lorb.onBeingSuggested\r\nexport const SelectkeepLorB = (state:RootState) => state.lorb.keepLorB\r\nexport const SelectAllLorB = (state:RootState) => state.lorb.AllLorB\r\nexport const SelectAllLorBIhave = (state:RootState) => state.lorb.AllLorBIhave\r\nexport const SelectCompleted = (state:RootState) => state.lorb.Completed\r\nexport const SelectError = (state:RootState) => state.lorb.error\r\n\r\nexport default LorBSlice.reducer;","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { FC } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\ninterface Props {\r\n    color?: \"inherit\" | \"primary\" | \"secondary\" | \"default\" ,\r\n    onClick?: (...optionalParams:any[]) => void,\r\n    textWillShow:string,\r\n    disabled?:boolean\r\n    className?:string\r\n    index?:string\r\n    type?:\"button\" | \"reset\" | \"submit\"\r\n}\r\n\r\nconst ButtonAtom: FC<Props> = ({\r\n    color,\r\n    onClick,\r\n    textWillShow,\r\n    disabled,\r\n    className,\r\n    index,\r\n    type\r\n}) => {\r\n    return (\r\n        <Button onClick={onClick} \r\n                disabled={disabled} \r\n                color={color} \r\n                variant=\"contained\"\r\n                className={className}\r\n                type={type}>\r\n                    {textWillShow}\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default  ButtonAtom;","import { FC } from \"react\";\r\nimport { Controller, Control, FieldErrors } from \"react-hook-form\";\r\nimport {TextField} from '@material-ui/core';\r\n\r\nexport interface Props {\r\n    label:string,\r\n    name:string,\r\n    errorText?:string,\r\n    pattern?:RegExp,\r\n    control:Control,\r\n    errors:FieldErrors,\r\n    fullwidth?:boolean\r\n    className?:{\r\n        [propsClass:string]:string\r\n    }\r\n}\r\n\r\n\r\nconst TextFieldAtom: FC<Props> = ({\r\n    label,\r\n    errorText,\r\n    name,\r\n    pattern,\r\n    control,\r\n    errors,\r\n    fullwidth,\r\n    className\r\n}) => {\r\n\r\n\r\n    return (\r\n        <div className={className?.TextFieldAtom}>\r\n            <Controller\r\n                control={control}\r\n                defaultValue=''\r\n                name={name}\r\n                rules={{\r\n                    required:true,\r\n                    pattern:pattern\r\n                }}\r\n                render={({ field }) => (\r\n                    <TextField\r\n                            {...field}\r\n                            fullWidth={fullwidth}\r\n                            label={label}\r\n                            error={Boolean(errors[name])}\r\n                            helperText={(errors[name] !== undefined) && \r\n                                                        (\r\n                                                            (errors[name].type === \"required\" ? '入力して下さい':'')||\r\n                                                            (errors[name].type === \"pattern\" ? `${errorText}`:'')\r\n                                                        )}\r\n                  />           \r\n                  )}\r\n                  />\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default  TextFieldAtom;","import { FC } from \"react\";\r\nimport { PropTypes,\r\n         Typography\r\n         } from '@material-ui/core';\r\nimport { Variant } from '@material-ui/core/styles/createTypography'\r\n\r\ninterface Props {\r\n    children:string\r\n    variant:Variant\r\n    align?:PropTypes.Alignment\r\n    className?:string \r\n    style?:object\r\n}\r\n\r\nconst TypographyAtoms: FC<Props> = ({\r\n    children,\r\n    variant,\r\n    align,\r\n    style,\r\n    className\r\n}) => {\r\n    return (\r\n        <Typography\r\n            variant={variant}\r\n            align={align} \r\n            style={style}\r\n            className={className}\r\n        >\r\n            {children}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nexport default  TypographyAtoms;","import { \r\n    List, \r\n    ListItem, \r\n    ListItemIcon, \r\n    ListItemText\r\n} from \"@material-ui/core\";\r\nimport { \r\n    AccountCircle\r\n} from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface ListProps <T>{\r\n    ListChild:T[]\r\n}\r\n\r\ntype ListComponent = <T>(\r\n    props:ListProps<T>\r\n) => React.ReactElement<ListProps<T>>\r\n\r\nconst ListAtom :ListComponent= ({\r\n    ListChild\r\n}) => {\r\n    return (\r\n        <List>\r\n            {\r\n                ListChild.map((item, index) => (\r\n                    <Link to=\"/mypage\" key={index}>\r\n                        <ListItem>\r\n                            <ListItemIcon>\r\n                                { index === 0 && <AccountCircle/> }\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={item}/>\r\n                        </ListItem>\r\n                    </Link>\r\n                ))\r\n            }\r\n        </List>\r\n    )\r\n}\r\n\r\nexport  default ListAtom","import { FC } from \"react\";\r\nimport { Controller, Control, FieldErrors } from \"react-hook-form\";\r\nimport {Select, MenuItem} from '@material-ui/core';\r\nimport { User } from \"../../slices/userSlice\";\r\n\r\nexport interface Props {\r\n    label:string,\r\n    name:string,\r\n    pattern?:RegExp,\r\n    control:Control,\r\n    errors:FieldErrors,\r\n    fullwidth?:boolean\r\n    className?:{\r\n        [propsClass:string]:string\r\n    }\r\n    selectItems:User[]\r\n}\r\n\r\n\r\nconst SelectAtom: FC<Props> = ({\r\n    label,\r\n    name,\r\n    pattern,\r\n    control,\r\n    errors,\r\n    fullwidth,\r\n    className,\r\n    selectItems\r\n}) => {\r\n\r\n\r\n    return (\r\n        <div className={className?.TextFieldAtom}>\r\n            <Controller\r\n                control={control}\r\n                name={name}\r\n                defaultValue=''\r\n                render={({ field }) => (\r\n                    <Select\r\n                            {...field}\r\n                    >\r\n                        {\r\n                            selectItems.map((item) => {\r\n                                return (\r\n                                    <MenuItem  value={item._id} key={item._id}>{item.name}</MenuItem>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Select>           \r\n                  )}\r\n                  />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default  SelectAtom;","import { FC } from \"react\";\r\nimport { Control, FieldErrors } from \"react-hook-form\";\r\nimport {\r\n    BottonAtom,\r\n    TextFieldAtom\r\n} from '../../component/atoms/index'\r\nimport { Box } from '@material-ui/core'\r\n\r\n// import { Props as propsArray } from '../../component/atoms/TextFieldAtom'\r\n\r\nexport interface propsArray {\r\n    label:string,\r\n    name:string,\r\n    errorText?:string,\r\n    pattern?:RegExp,\r\n}\r\n\r\n\r\ninterface Props {\r\n    propsArray:propsArray[],\r\n    control:Control,\r\n    errors:FieldErrors,\r\n    handleFunc:(...handleArgs:any[]) => void,\r\n    textWillShow:string,\r\n    className?:{\r\n        [propsClass:string]:string\r\n    }\r\n}\r\n\r\n\r\nconst FormBuilder:FC<Props> = ({\r\n    propsArray,\r\n    control,\r\n    errors,\r\n    handleFunc,\r\n    textWillShow,\r\n    className\r\n}) => {\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <form>\r\n                {\r\n                    propsArray.map((props, index) => (\r\n                        <TextFieldAtom \r\n                                {...props} \r\n                                control={control} \r\n                                errors={errors} \r\n                                key={index}\r\n                                className={className}\r\n                        >\r\n                        </TextFieldAtom>\r\n                    ))\r\n                }       \r\n                    <Box className={className?.Box}>\r\n                        <BottonAtom onClick={() => handleFunc()} color={\"primary\"} textWillShow={textWillShow} />      \r\n                    </Box>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FormBuilder;","import { createAsyncThunk, \r\n         createSlice, \r\n         } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../app/store\";\r\nimport axios from \"axios\";\r\nimport { POST_LOGIN_URL , GET_CURRENT_USER_URL } from \"../app/commonURL\";\r\n\r\nexport interface User {\r\n    name:string\r\n    _id:string\r\n} \r\n\r\nexport interface Login {\r\n    user:User\r\n} \r\n\r\nexport interface ErrorResponse {\r\n    success:boolean\r\n}\r\n\r\nexport interface loginAction {\r\n    email:string\r\n    password:string\r\n}\r\n\r\nconst initialState:Login = {\r\n    user:{\r\n        name:'',\r\n        _id:''\r\n    }\r\n}\r\n\r\n//ログイン処理しユーザーデータを取得\r\nexport const loginAndFetchUser = createAsyncThunk<User, loginAction,\r\n    { state:RootState,\r\n    rejectValue:ErrorResponse \r\n    }>(\r\n    'loginSlice/loginAndFetchUser',\r\n    async ({email, password},{ getState ,rejectWithValue }) => {\r\n       const { data } = await axios.post(POST_LOGIN_URL, {\r\n            email,\r\n            password\r\n        })\r\n        if(!data.success) {\r\n            return data.success\r\n        }\r\n        try{\r\n            axios.defaults.withCredentials = true;\r\n            const  res  = await axios.get(GET_CURRENT_USER_URL)\r\n            console.log(res)\r\n            return res.data.user\r\n        } catch (error) {\r\n            console.log(9)\r\n        }\r\n    }\r\n)\r\n\r\n//Homeロード時にユーザーデータを取得\r\nexport const fetchUser = createAsyncThunk<User, void,\r\n    { state:RootState,\r\n    rejectValue:User \r\n    }>(\r\n    'loginSlice/fetchUser',\r\n    async (_,{ rejectWithValue }) => {\r\n        try{\r\n            axios.defaults.withCredentials = true;\r\n            const  res  = await axios.get(GET_CURRENT_USER_URL)\r\n            if(res.data.success === false) {\r\n                return {name:'',id:''}\r\n            }\r\n            console.log(res)\r\n            return res.data.user\r\n        } catch (error) {\r\n            return rejectWithValue({name:'',_id:''})\r\n        }\r\n    }\r\n)\r\n\r\n\r\nexport const loginSlice = createSlice({\r\n    name:'login',\r\n    initialState,\r\n    reducers:{\r\n        logout:(state) => {\r\n            console.log(state)\r\n            state.user = {name:'',_id:''}\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n        .addCase(loginAndFetchUser.fulfilled,(state, action) => {\r\n            state.user = action.payload\r\n        })\r\n\r\n        builder\r\n        .addCase(fetchUser.fulfilled, (state, action) => {\r\n            const { name, _id } = action.payload\r\n            state.user = {name, _id}\r\n        })\r\n        .addCase(fetchUser.rejected, (state, action) => {\r\n            if(action.payload !== undefined){\r\n                state.user = action.payload    \r\n            }\r\n        })\r\n    }\r\n})\r\n\r\nexport const { logout } = loginSlice.actions;\r\nexport const SelectUser = (state:RootState) => state.login.user \r\n\r\nexport default loginSlice.reducer;","import { \r\n         IconButton,\r\n         Drawer,\r\n         useTheme,\r\n         Divider\r\n         } from \"@material-ui/core\";\r\nimport { ChevronLeft, ChevronRight } from \"@material-ui/icons\"; \r\nimport { useAppSelector } from '../../app/hooks';\r\nimport { SelectUser } from '../../slices/loginSlice';\r\nimport { FC } from \"react\";\r\nimport { ListAtom } from '../atoms';\r\n         \r\ninterface Props {\r\n    handleFrag:() => void,\r\n    open:boolean\r\n}\r\n\r\nconst SideNav :FC<Props>= ({\r\n    handleFrag,\r\n    open\r\n}) => {\r\n    const theme = useTheme();\r\n    const user = useAppSelector(SelectUser);\r\n    \r\n    return (\r\n        <>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n            >\r\n                <div>\r\n                    <IconButton onClick={handleFrag}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeft/>:<ChevronRight/>}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider/>\r\n\r\n                <ListAtom ListChild={[user.name]}/>\r\n\r\n            </Drawer>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SideNav;","import { BottonAtom } from \"../atoms\";\r\nimport { AppBar,\r\n         makeStyles,\r\n         Toolbar,\r\n         Typography,\r\n         CssBaseline\r\n         } from \"@material-ui/core\";\r\nimport { IconButton } from \"@material-ui/core\";         \r\nimport { Menu } from \"@material-ui/icons\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\r\nimport { SelectUser, logout } from '../../slices/loginSlice';\r\nimport { useState } from \"react\";\r\nimport SideNav from \"../organisms/SideNav\";\r\n\r\n\r\nconst useStyles = makeStyles((thema) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    header: {\r\n        backgroundColor:\"orange\"\r\n    },\r\n    button: {\r\n        marginLeft: thema.spacing(2)\r\n    },\r\n    logo:{\r\n        fontSize: \"18px\",\r\n        flexGrow:1\r\n    },\r\n}))\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    const user = useAppSelector(SelectUser);\r\n    const dispatch = useAppDispatch();\r\n    const history = useHistory();\r\n    const [open, setOpen] = useState<boolean>(false)\r\n\r\n    const handleLogout = () => {\r\n        dispatch(logout())\r\n        history.push('/')\r\n    }\r\n\r\n    const handleFlag = () => {\r\n        setOpen(prevState => {\r\n            return !prevState\r\n        })\r\n    }\r\n    \r\n\r\n                    \r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"static\" className={classes.header}>\r\n                <Toolbar>\r\n                    <IconButton \r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            edge=\"start\"\r\n                            onClick={handleFlag}\r\n                            >\r\n                            <Menu />\r\n                    </IconButton>\r\n                    <Typography variant=\"h4\" className={classes.logo}>\r\n                        <Link to=\"/\" style={{\r\n                                                textDecoration: 'none',\r\n                                                fontWeight:'bold',\r\n                                                marginLeft:'2rem'\r\n                                             }}>\r\n                            貸し借りDB\r\n                        </Link>\r\n                    </Typography> \r\n\r\n                    <div>\r\n                        {user && user.name && <span>ようこそ{user.name}さん</span>}\r\n                    </div>\r\n                    \r\n                        {\r\n                            user.name &&\r\n                            <BottonAtom \r\n                                    onClick={() => history.push('/createLorB')} \r\n                                    color={\"primary\"} \r\n                                    textWillShow={\"貸し借り作成\"}\r\n                                    className={classes.button}\r\n                            />\r\n                        }\r\n\r\n                        {\r\n                            user.name &&\r\n                            <BottonAtom \r\n                                    onClick={() => history.push('/completed')} \r\n                                    color={\"primary\"} \r\n                                    textWillShow={\"貸し借り履歴\"}\r\n                                    className={classes.button}\r\n                            />\r\n                        }\r\n\r\n                        {\r\n                            user.name ? \r\n                            <BottonAtom \r\n                                    onClick={() => handleLogout()} \r\n                                    color={\"primary\"} \r\n                                    textWillShow={\"ログアウト\"}\r\n                                    className={classes.button}\r\n                            /> :\r\n                            <BottonAtom \r\n                                    onClick={() => history.push('/login')} \r\n                                    color={\"primary\"} \r\n                                    textWillShow={\"ログイン\"}\r\n                                    className={classes.button}\r\n                            />\r\n                                                \r\n                        }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <SideNav handleFrag={handleFlag} open={open}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import { FC, useEffect } from \"react\";\r\nimport { \r\n         List,\r\n         ListItem,\r\n         ListItemText\r\n         } from '@material-ui/core';\r\nimport TypographyAtoms from \"../atoms/TypographyAtoms\";\r\nimport { Link } from 'react-router-dom' \r\n\r\ninterface classType {\r\n    [classChild:string]:any\r\n}\r\n\r\ninterface Props {\r\n    willShows:any\r\n    count?:number\r\n    text:string\r\n    className?:classType,\r\n    root: string\r\n}\r\n\r\nconst ListModule: FC<Props> = ({\r\n    willShows,\r\n    text,\r\n    className,\r\n    root\r\n}) => {\r\n\r\n    useEffect(() => {\r\n        console.log(willShows,'コンポーネント')        \r\n    })\r\n\r\n    return (\r\n        <div className={className?.list}>\r\n                <TypographyAtoms \r\n                        variant={\"body1\"} \r\n                        align=\"center\"\r\n                        className={className?.box}>\r\n                    {text}\r\n                </TypographyAtoms>\r\n            \r\n\r\n            <List>\r\n                {\r\n                    willShows.map((willShow:any, index:number) => {\r\n                       return (\r\n                            <ListItem key={index} className={className?.box}>\r\n                                <Link to={`/${root}/${index}`} style={{textDecoration: 'none'}}>\r\n                                    <ListItemText \r\n                                            primary={willShow.LorBBox.title}\r\n                                            className={className?.box}    \r\n                                    />\r\n                                </Link>\r\n                            </ListItem>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </List>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default  ListModule;","import { FC } from \"react\";\r\nimport { \r\n        Table,\r\n        TableBody,\r\n        TableCell,\r\n        TableContainer,\r\n        TableRow,\r\n        Paper  } from \"@material-ui/core\";\r\nimport { resObj } from \"../../slices/lorbSlice\";\r\n\r\ninterface Props {\r\n    item:resObj,\r\n    className?:string\r\n}\r\n\r\n\r\n\r\nconst OneDataDisplay :FC<Props> = ({\r\n    item,\r\n    className\r\n}) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            { item && \r\n                    <div className={className}>\r\n                        <TableContainer component={Paper}>\r\n                            <Table>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\">\r\n                                            タイトル\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            {item.LorBBox.title}\r\n                                        </TableCell>\r\n                                        <TableCell></TableCell>\r\n                                        <TableCell></TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell rowSpan={2} align=\"center\">\r\n                                            貸し借り内容\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            種類：{item.LorBBox.detailClass}\r\n                                        </TableCell>\r\n                                        <TableCell></TableCell>\r\n                                        <TableCell></TableCell>\r\n                                    </TableRow>\r\n\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\">\r\n                                            貸し借り詳細：{item.LorBBox.aboutDetail}\r\n                                        </TableCell>\r\n                                        <TableCell></TableCell>\r\n                                        <TableCell></TableCell>\r\n                                    </TableRow>\r\n                                    \r\n\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\">\r\n                                            貸し借り関係\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            貸し人：{item.userFromName}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            ⇒\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            借り人：{item.userToName}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OneDataDisplay;","import { FC } from \"react\";\r\nimport { BottonAtom } from '../atoms'\r\nimport { resObj } from \"../../slices/lorbSlice\";\r\nimport { useAppDispatch } from \"../../app/hooks\";\r\nimport { approveCreateAction } from \"../../slices/lorbSlice\";\r\n\r\ninterface Props {\r\n    color?: \"inherit\" | \"primary\" | \"secondary\" | \"default\" ,\r\n    onClick?: (...optionalParams:any[]) => void,\r\n    textWillShow:string,\r\n    className?:string\r\n    item?:resObj\r\n    willDispatch:any\r\n    index?:number\r\n    reloadFunc?:any\r\n}\r\n\r\nconst ApproveAndReject: FC<Props> = ({\r\n    color,\r\n    textWillShow,\r\n    className,\r\n    item,\r\n    willDispatch,\r\n    index,\r\n    reloadFunc\r\n}) => {\r\n\r\n    const dispatch = useAppDispatch();\r\n    // const [buttonFlag, setButtonFlag] = useState<boolean>(true);\r\n    const handleApproveOrDelete = () => {\r\n        if(item?.userFrom !== undefined\r\n            && item.userTo !== undefined\r\n            && item.LorBBox._id !== undefined){\r\n            const payload :approveCreateAction<string> = {\r\n                userTo:item.userTo,\r\n                userFrom:item.userFrom,\r\n                id:item.LorBBox._id\r\n            }\r\n            console.log(willDispatch)\r\n            console.log(payload)\r\n            dispatch(willDispatch(payload)).then(() => {\r\n                dispatch(reloadFunc())\r\n            })\r\n        }\r\n        // setButtonFlag(prevState => {\r\n        //     return !prevState\r\n        // })\r\n    }\r\n\r\n    return (\r\n        <BottonAtom \r\n        textWillShow={textWillShow}\r\n        className={className}\r\n        onClick={() => handleApproveOrDelete()}\r\n        color={color} \r\n        // color={buttonFlag ? color:'secondary'} \r\n        />\r\n    );\r\n};\r\n\r\nexport default  ApproveAndReject;","import { FC } from \"react\";\r\nimport { \r\n    Container,\r\n    Box        \r\n} from \"@material-ui/core\";\r\nimport { ApproveAndReject } from \"../molecules\";\r\nimport { OneDataDisplay } from '../molecules'\r\nimport { resObj } from \"../../slices/lorbSlice\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport interface buttonArray {\r\n    textWillShow:string\r\n    color:\"inherit\" | \"primary\" | \"secondary\" | \"default\"\r\n    willDispatch?:any,\r\n    id:number,\r\n    propsPath?:string\r\n}\r\n\r\ninterface Props {\r\n    children:string,\r\n    classes:any,\r\n    items:resObj[],\r\n    buttonArray:buttonArray[],\r\n    reloadFunc?:any\r\n}\r\n\r\nconst ShowListOfAnyLorB : FC<Props>= ({\r\n    children,\r\n    classes,\r\n    items,\r\n    buttonArray,\r\n    reloadFunc\r\n}) => {\r\n    useEffect(() => {\r\n        console.log(items)\r\n    })\r\n\r\n    return (\r\n        <>  \r\n            { items && (Array.isArray(items) && Boolean(items.length)) ?   \r\n                (items?.map((item, index) => {\r\n                    return (\r\n                    <Container key={index} maxWidth='sm' >\r\n                        <OneDataDisplay item={item} className={classes.approve}/>\r\n                        <Box display=\"flex\"  className={classes.box}>\r\n                            {\r\n                                buttonArray \r\n                                &&\r\n                                buttonArray.map((property) => {\r\n                                    return (\r\n                                        <ApproveAndReject \r\n                                                textWillShow={property.textWillShow}\r\n                                                className={classes.button}\r\n                                                color={property.color}\r\n                                                item={item}\r\n                                                willDispatch={property.willDispatch}\r\n                                                index={index}\r\n                                                key={property.id}\r\n                                                reloadFunc={reloadFunc}\r\n                                        />\r\n                                    )\r\n                                })\r\n                                \r\n                            }\r\n                        </Box>\r\n                    </Container>\r\n                    )\r\n                })\r\n                ):\r\n                <Box>\r\n                    {children}\r\n                </Box>  \r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ShowListOfAnyLorB;","import React, { useState,useEffect, FC } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { OneDataDisplay } from \"../../component/molecules\";\r\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\r\nimport { \r\n    resObj, \r\n    updateNogotiate,\r\n    keepLorB } from \"../../slices/lorbSlice\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { Container, makeStyles } from \"@material-ui/core\";\r\nimport { FormBuilder } from \"../../component/molecules\";\r\nimport { useForm, FieldValues } from \"react-hook-form\";\r\n\r\nconst useStyles = makeStyles({\r\n    Container:{\r\n        margin:'20px 0 0 0'\r\n    },\r\n    button:{\r\n        margin:'0 0 0 10px'\r\n    },\r\n    TextFieldAtom:{\r\n        margin:'10px 0 0 0',\r\n        textAlign:\"center\"\r\n    },\r\n    Box:{\r\n        textAlign:\"right\"\r\n    }\r\n})\r\n\r\ninterface PropsforChild {\r\n    label:string,\r\n    name:string,\r\n    errorText?:string,\r\n    pattern?:RegExp,\r\n}\r\n\r\nconst propsArray:PropsforChild[] = [\r\n    {\r\n        label:'交渉アイテム',\r\n        name:'negotiateItem',\r\n        errorText:'交渉アイテムが未入力です'\r\n    },\r\n    {\r\n        label:'交渉内容',\r\n        name:'negotiateDetail',\r\n        errorText:'交渉内容が未入力です'\r\n    },\r\n]\r\n\r\ninterface Props {\r\n    id:string\r\n    willSelect:(state: RootState) => keepLorB | undefined,\r\n    KeeponProps:keyof keepLorB\r\n}\r\n\r\nexport const NegotiateTemplate :FC<Props> = ({\r\n    id,\r\n    willSelect,\r\n    KeeponProps\r\n}) => {\r\n    const classes = useStyles()\r\n    const history = useHistory();\r\n    const dispatch = useAppDispatch();\r\n    const [KeepOnWillshow ,setKeepOnWill] = useState<resObj>()\r\n    const [KeepId, setKeepId] = useState<string | undefined>('')\r\n    const [userFrom , setUserFrom] = useState<string | undefined>('')\r\n    const [userTo , setUserTo] = useState<string | undefined>('')\r\n    const KeepOn:keepLorB|undefined = useAppSelector(willSelect)\r\n    useEffect(() => {\r\n        const KeepOnChild = KeepOn && (KeepOn[KeeponProps] as resObj[])\r\n            KeepOnChild && setKeepOnWill(KeepOnChild[Number(id)])\r\n    },[KeepOn, id, KeeponProps])\r\n    useEffect(() => {\r\n        setKeepId(KeepOnWillshow?.LorBBox?._id)\r\n        setUserFrom(KeepOnWillshow?.userFrom)\r\n        setUserTo(KeepOnWillshow?.userTo)\r\n    }, [KeepOnWillshow])\r\n    const { formState:{errors} , control, getValues} = useForm<FieldValues>({\r\n        mode:\"all\"\r\n    })\r\n\r\n    const handleFunc = () => {\r\n        const { negotiateItem, negotiateDetail} = getValues();\r\n        const id = KeepId\r\n        if(\r\n            negotiateItem && \r\n            negotiateDetail&& \r\n            id&&\r\n            userFrom&&\r\n            userTo) {\r\n                dispatch(updateNogotiate({ \r\n                    userFrom,\r\n                    userTo,\r\n                    negotiateItem,\r\n                    negotiateDetail,\r\n                    id\r\n                  }))\r\n            }\r\n            history.push('/')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                KeepOnWillshow &&\r\n                <Container maxWidth='sm'>\r\n                    <OneDataDisplay item={KeepOnWillshow} className={classes.Container} />\r\n\r\n                    <FormBuilder \r\n                         propsArray={propsArray} \r\n                         control={control} \r\n                         errors={errors} \r\n                         handleFunc={handleFunc}\r\n                         textWillShow=\"交渉\"\r\n                         className={classes}/>\r\n                </Container>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NegotiateTemplate;","import { TypographyAtoms } from \"../atoms\";\r\nimport { makeStyles, Box } from \"@material-ui/core\"; \r\nimport { User } from \"../../slices/loginSlice\"; \r\nimport { FC } from \"react\";\r\n\r\nconst useStyles = makeStyles((thema) => ({\r\n    TypoBox: {\r\n        margin:'25px 0 0 25px'\r\n    },\r\n    TypoName:{\r\n        fontSize:\"20px\",\r\n        fontWeight:\"bold\"\r\n    },\r\n    approve:{\r\n        margin:'20px 0 0 0'\r\n    },\r\n    button:{\r\n        margin:'0 0 0 10px'\r\n    },\r\n    box:{\r\n        margin:'10px 0 0 0',\r\n        justifyContent:\"flex-start\"\r\n    }\r\n}))\r\n\r\ninterface Props {\r\n    user:User\r\n}\r\n\r\n\r\n\r\nconst MypageUser :FC<Props>= ({\r\n    user\r\n}) => {\r\n    \r\n    const classes = useStyles()\r\n    return (\r\n        <>\r\n            <Box>\r\n\r\n                <TypographyAtoms \r\n                            variant={\"body1\"} \r\n                            align=\"left\"\r\n                            className={classes.TypoName}\r\n                            >\r\n                        {`userName：${user.name}`}\r\n                </TypographyAtoms>\r\n\r\n                <TypographyAtoms \r\n                            variant={\"subtitle2\"} \r\n                            align=\"left\"\r\n                            >\r\n                        {`ID：${user._id}`}\r\n                </TypographyAtoms>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MypageUser","import { createAsyncThunk, \r\n    createSlice, \r\n    } from \"@reduxjs/toolkit\";\r\nimport { AppDispatch, RootState } from \"../app/store\";\r\nimport axios from \"axios\";\r\nimport { \r\n    EDIT_USER , \r\n    GET_FOLLOW,\r\n    POST_FOLLOW_USER,\r\n    GET_GET_FOLOWER \r\n} from \"../app/commonURL\";\r\n\r\nexport interface User {\r\nname:string\r\n_id:string\r\n} \r\n\r\nexport interface ErrorResponse {\r\n    name:string\r\n    _id:string\r\n}\r\n\r\ninterface UserState {\r\n    followUser:User[],\r\n    followERUser:User[],\r\n    errorStateFollow:string,\r\n    errorStateFollowER:string\r\n}\r\n\r\nconst initialState :UserState= {\r\n    followUser:[],\r\n    followERUser:[],\r\n    errorStateFollow:'',\r\n    errorStateFollowER:''\r\n} \r\n    \r\n//ユーザーをフォロー\r\nexport const FollowUser = createAsyncThunk<boolean, {[email:string]:string},\r\n{ \r\n    state:RootState,\r\n    rejectValue:string,\r\n    dispatch:AppDispatch \r\n}>(\r\n'UserSlice/FollowUser',\r\nasync (email,{ getState ,rejectWithValue }) => {\r\n  \r\n   try{\r\n       axios.defaults.withCredentials = true;\r\n       console.log(email)\r\n       const  res  = await axios.post(POST_FOLLOW_USER, email\r\n       )\r\n       if(res.data.success === false){\r\n        return rejectWithValue('取得に失敗しました')\r\n       }\r\n       return res.data.success\r\n   } catch (error) {\r\n       return rejectWithValue('取得に失敗しました')\r\n   }\r\n}\r\n)\r\n\r\n//フォローしているユーザーの情報を取得\r\nexport const getFollow = createAsyncThunk<User[], void,\r\n{ state:RootState,\r\nrejectValue:string \r\n}>(\r\n'UserSlice/getFollow',\r\nasync (_,{ rejectWithValue }) => {\r\n   try{\r\n       axios.defaults.withCredentials = true;\r\n       const  res  = await axios.get(GET_FOLLOW)\r\n       console.log(res,'フォローデータ')\r\n       if(res.data.success === false) {\r\n        return rejectWithValue('取得に失敗しました')\r\n       }\r\n       return res.data.followData\r\n   } catch (error) {\r\n       return rejectWithValue('取得に失敗しました')\r\n   }\r\n}\r\n)\r\n\r\n//自分をフォローしているユーザー(フォロワー)の情報を取得\r\nexport const getFollower = createAsyncThunk<User[], void,\r\n{ state:RootState,\r\nrejectValue:string \r\n}>(\r\n'UserSlice/getFollower',\r\nasync (_,{ getState ,rejectWithValue }) => {\r\n  \r\n   try{\r\n       axios.defaults.withCredentials = true;\r\n       const  res  = await axios.get(GET_GET_FOLOWER)\r\n       console.log(res,'フォロワーデータ')\r\n       return res.data.followerData\r\n   } catch (error) {\r\n       return rejectWithValue('取得に失敗しました')\r\n   }\r\n}\r\n)\r\n\r\n\r\n\r\n\r\nexport const userSlice = createSlice({\r\nname:'user',\r\ninitialState,\r\nreducers:{\r\n},\r\nextraReducers: (builder) => {\r\n   builder\r\n   .addCase(getFollow.fulfilled,(state, action) => {\r\n       console.log(action)\r\n       state.followUser = action.payload\r\n   })\r\n   .addCase(getFollow.rejected, (state, action) => {\r\n       if(action.payload !== undefined){\r\n           state.errorStateFollow = action.payload    \r\n       }\r\n   })\r\n   .addCase(getFollower.fulfilled,(state, action) => {\r\n    state.followERUser = action.payload\r\n   })\r\n   .addCase(getFollower.rejected, (state, action) => {\r\n    if(action.payload !== undefined){\r\n        state.errorStateFollowER = action.payload    \r\n    }\r\n})\r\n}\r\n})\r\n\r\n\r\nexport const SelectFollowUser = (state:RootState) => state.user.followUser\r\nexport const SelectFollowERUser = (state:RootState) => state.user.followERUser \r\n\r\nexport default userSlice.reducer;","import { MypageUser } from \"../organisms\";\r\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\r\nimport { SelectUser } from \"../../slices/loginSlice\";\r\nimport { useForm, FieldValues } from \"react-hook-form\";\r\nimport { \r\n    SelectFollowUser,\r\n    SelectFollowERUser,\r\n    getFollow,\r\n    getFollower,\r\n    FollowUser\r\n } from \"../../slices/userSlice\";\r\nimport { Container, Box } from \"@material-ui/core\";\r\nimport { buttonArray } from \"./ShowListOfAnyLorB\"; \r\nimport { FC, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { ApproveAndReject, FormBuilder } from \"../molecules\";\r\nimport { propsArray } from \"../molecules/FormBuilder\";\r\nimport { WrapMypageUser } from \".\";\r\nimport { \r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    Link\r\n   } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((thema) => ({\r\n    button:{\r\n        margin:'0 0 0 10px'\r\n    },\r\n    ButtonsBox:{\r\n        margin:'40px 0 0 0',\r\n        justifyContent:\"flex-start\"\r\n    },\r\n    container:{\r\n        margin:'10px 0 0 0'\r\n    },\r\n    Box:{\r\n        margin:'10px 0 0 0'\r\n    },\r\n    SwitchBox:{\r\n        border:\"3px solid #3366CC\",\r\n        width:'40%'\r\n    }\r\n}))\r\n\r\nconst propsArrayFor :propsArray[] = [\r\n    {\r\n        label:'メールアドレス',\r\n        name:'email',\r\n        errorText:'入力が不正です',\r\n        pattern:/.+@.+/\r\n    }\r\n]\r\n\r\ninterface Props {\r\n    buttonArrays:buttonArray[]\r\n}\r\n\r\nconst MayPageTemplate :FC<Props>= ({\r\n    buttonArrays\r\n}) => {\r\n    const user = useAppSelector(SelectUser);\r\n    const classes = useStyles();\r\n    const followUsers = useAppSelector(SelectFollowUser);\r\n    const followERUsers = useAppSelector(SelectFollowERUser);\r\n    const dispatch = useAppDispatch();\r\n    const match = useRouteMatch();\r\n    const { formState:{errors} , control, getValues } = useForm<FieldValues>({\r\n        mode:\"all\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getFollow())\r\n        dispatch(getFollower())\r\n    },[dispatch])\r\n\r\n    const handleFunc = () => {\r\n        const email = getValues();\r\n        console.log(email)\r\n        dispatch(FollowUser(email));\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <Container className={classes.container}>\r\n                <MypageUser user={user}/>\r\n                        <Box>\r\n                                <Box>\r\n                                    <FormBuilder\r\n                                        propsArray={propsArrayFor}\r\n                                        control={control}\r\n                                        textWillShow={'フォローする'}\r\n                                        errors={errors}\r\n                                        handleFunc={handleFunc}\r\n                                        className={classes}\r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\"  className={classes.ButtonsBox}>\r\n                                    {\r\n                                        buttonArrays \r\n                                        &&\r\n                                        buttonArrays.map((property) => {\r\n                                            return (\r\n                                                <Link \r\n                                                    to={`${match.url}/${property.propsPath}`} \r\n                                                    key={property.id}\r\n                                                    style={{textDecoration: 'none'}}\r\n                                                >\r\n                                                    <ApproveAndReject \r\n                                                            textWillShow={property.textWillShow}\r\n                                                            className={classes.button}\r\n                                                            color={property.color}\r\n                                                            willDispatch={property.willDispatch}\r\n                                                    />\r\n                                                </Link>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Box>\r\n\r\n                                <Box>\r\n                                        <Switch>\r\n                                            <Route \r\n                                                path={`${match.path}/showfollow`}   \r\n                                            >\r\n                                                <WrapMypageUser userInfo={followUsers} />\r\n                                            </Route>\r\n\r\n                                            <Route \r\n                                                path={`${match.path}/showfollower`}  \r\n                                            >\r\n                                                <WrapMypageUser userInfo={followERUsers} />\r\n                                            </Route>\r\n                                        </Switch>                                                       \r\n                                </Box>\r\n                        </Box>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MayPageTemplate","import { MypageUser } from \"../organisms\";\r\nimport { User } from \"../../slices/userSlice\";\r\nimport React, { FC } from \"react\";\r\nimport { \r\n    Box, \r\n    makeStyles,\r\n    Divider\r\n } from '@material-ui/core'\r\n\r\ninterface Props {\r\n    userInfo:User[]\r\n}\r\n\r\nconst useStyles = makeStyles((thema) => ({\r\n    SwitchBox:{\r\n        border:\"3px solid #3366CC\",\r\n        width:'40%',\r\n        borderRadius:'5px'\r\n    }\r\n}))\r\n\r\nconst WrapMypageUser :FC<Props>= ({\r\n    userInfo\r\n}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            {\r\n                        userInfo.length >= 1  &&\r\n                        <Box className={classes.SwitchBox}>\r\n                            {\r\n                                    userInfo.map((user) => {\r\n                                    return (\r\n                                        <React.Fragment key={user._id}>\r\n                                            <MypageUser \r\n                                                user={user}\r\n                                            />\r\n                                            <Divider/>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Box>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WrapMypageUser;","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { \r\n    makeStyles      \r\n} from \"@material-ui/core\";\r\nimport { SelectOnMaking } from \"../../slices/lorbSlice\";\r\nimport { useAppSelector } from \"../../app/hooks\";\r\nimport { \r\n    rejectCreate, \r\n    approveCreate,\r\n    getOnMaking\r\n    } from \"../../slices/lorbSlice\";\r\nimport { resObj } from \"../../slices/lorbSlice\";\r\nimport { buttonArray } from \"../../component/templates/ShowListOfAnyLorB\";\r\nimport { ShowListOfAnyLorB } from \"../../component/templates\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    approve:{\r\n        margin:'20px 0 0 0'\r\n    },\r\n    button:{\r\n        margin:'0 0 0 10px'\r\n    },\r\n    box:{\r\n        margin:'10px 0 0 0',\r\n        justifyContent:\"flex-end\"\r\n    }\r\n})\r\nconst buttonProps :buttonArray[]=[ \r\n    {\r\n        textWillShow:\"拒否\",\r\n        color:\"primary\",\r\n        willDispatch:rejectCreate,\r\n        id:1\r\n    },\r\n    {\r\n        textWillShow:\"承認\",\r\n        color:\"primary\",\r\n        willDispatch:approveCreate,\r\n        id:2\r\n    }\r\n]\r\n\r\nconst ApproveCreate = () => {\r\n    const classes = useStyles();\r\n    const [items, setItems] = useState<Array<resObj>>() \r\n    const onMaking = useAppSelector(SelectOnMaking)\r\n    \r\n\r\n    useEffect(() => {\r\n        if(onMaking !== undefined) {\r\n            setItems(onMaking.onMaking)\r\n        }\r\n    },[onMaking])\r\n\r\n    return (\r\n        <>  \r\n            <ShowListOfAnyLorB \r\n                    buttonArray={buttonProps} \r\n                    classes={classes} \r\n                    items={items as resObj[]}\r\n                    reloadFunc={getOnMaking}\r\n                    >\r\n                作成依頼のものはありません\r\n            </ShowListOfAnyLorB>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ApproveCreate;","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { \r\n    makeStyles      \r\n} from \"@material-ui/core\";\r\nimport {  } from \"../../slices/lorbSlice\";\r\nimport { useAppSelector } from \"../../app/hooks\";\r\nimport { \r\n    rejectNegotiate, \r\n    deleteLorBtable ,\r\n    SelectonBeingSuggested,\r\n    getOnBeingSuggested\r\n} from \"../../slices/lorbSlice\";\r\nimport { resObj } from \"../../slices/lorbSlice\";\r\nimport { buttonArray } from \"../../component/templates/ShowListOfAnyLorB\";\r\nimport { ShowListOfAnyLorB } from \"../../component/templates\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    approve:{\r\n        margin:'20px 0 0 0'\r\n    },\r\n    button:{\r\n        margin:'0 0 0 10px'\r\n    },\r\n    box:{\r\n        margin:'10px 0 0 0'\r\n    }\r\n})\r\nconst buttonProps :buttonArray[]=[ \r\n    {\r\n        textWillShow:\"拒否\",\r\n        color:\"primary\",\r\n        willDispatch:rejectNegotiate,\r\n        id:1\r\n    },\r\n    {\r\n        textWillShow:\"承認\",\r\n        color:\"primary\",\r\n        willDispatch:deleteLorBtable,\r\n        id:2\r\n    },\r\n]\r\n\r\nconst ApproveNegotiate = () => {\r\n    const classes = useStyles();\r\n    const [items, setItems] = useState<Array<resObj>>() \r\n    const onBeingSuggested = useAppSelector(SelectonBeingSuggested)\r\n    \r\n\r\n    useEffect(() => {\r\n        if(onBeingSuggested !== undefined) {\r\n            setItems(onBeingSuggested.onBeingSuggested)\r\n        }\r\n    },[onBeingSuggested])\r\n\r\n    return (\r\n        <>  \r\n            <ShowListOfAnyLorB \r\n                    buttonArray={buttonProps} \r\n                    classes={classes} \r\n                    items={items as resObj[]}\r\n                    reloadFunc={getOnBeingSuggested}\r\n                    >\r\n                解消依頼のものはありません\r\n            </ShowListOfAnyLorB>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ApproveNegotiate;","import { useParams } from \"react-router\";\r\nimport { SelectkeepLorB } from \"../../slices/lorbSlice\";\r\nimport { NegotiateTemplate } from \"../../component/templates\";\r\n\r\nexport const Borrow = () => {\r\n    const { id } = useParams<{id:string}>()\r\n\r\n    return (\r\n        <>\r\n                <NegotiateTemplate\r\n                        id={id}\r\n                        willSelect={SelectkeepLorB}\r\n                        KeeponProps=\"BKeepOn\"/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Borrow;","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { \r\n    makeStyles      \r\n} from \"@material-ui/core\";\r\nimport { SelectCompleted , getLorBCompleted} from \"../../slices/lorbSlice\";\r\nimport { SelectUser } from \"../../slices/loginSlice\";\r\nimport { useAppSelector ,useAppDispatch} from \"../../app/hooks\";\r\nimport { resObj } from \"../../slices/lorbSlice\";\r\nimport { buttonArray } from \"../../component/templates/ShowListOfAnyLorB\";\r\nimport { ShowListOfAnyLorB } from \"../../component/templates\";\r\nimport { TypographyAtoms } from \"../../component/atoms\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    approve:{\r\n        margin:'20px 0 0 0'\r\n    },\r\n    button:{\r\n        margin:'0 0 0 10px'\r\n    },\r\n    box:{\r\n        margin:'10px 0 0 0'\r\n    },\r\n    title:{\r\n        margin:'20px 0 0 0',\r\n        fontWeight:\"bold\"\r\n    }\r\n})\r\nconst buttonProps :buttonArray[]=[ \r\n    \r\n]\r\n\r\nconst Completed = () => {\r\n    const classes = useStyles();\r\n    const user = useAppSelector(SelectUser);\r\n    const dispatch = useAppDispatch();\r\n    const [LItems, setLItems] = useState<Array<resObj>>() \r\n    const [BItems, setBItems] = useState<Array<resObj>>() \r\n    const completed = useAppSelector(SelectCompleted)\r\n    \r\n    useEffect(() => {\r\n        dispatch(getLorBCompleted())\r\n    },[dispatch,user])\r\n\r\n    useEffect(() => {\r\n        if(completed !== undefined) {\r\n            setBItems(completed?.completed.BCompleted)\r\n            setLItems(completed?.completed.LCompleted)\r\n        }\r\n    },[completed])\r\n\r\n    return (\r\n        <>  \r\n            <TypographyAtoms \r\n                    variant={\"body1\"} \r\n                    align={\"center\"}\r\n                    className={classes.title}>\r\n                貸し履歴\r\n            </TypographyAtoms>\r\n            <ShowListOfAnyLorB \r\n                    buttonArray={buttonProps} \r\n                    classes={classes} \r\n                    items={LItems as resObj[]}\r\n                    >\r\n                貸し履歴はありません\r\n            </ShowListOfAnyLorB>\r\n\r\n            <TypographyAtoms \r\n                    variant={\"body1\"} \r\n                    align={\"center\"}\r\n                    className={classes.title}>\r\n                借り履歴\r\n            </TypographyAtoms>\r\n            <ShowListOfAnyLorB \r\n                    buttonArray={buttonProps} \r\n                    classes={classes} \r\n                    items={BItems as resObj[]}\r\n                    >\r\n                借り履歴はありません\r\n            </ShowListOfAnyLorB>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Completed;","import { \r\n    Container,\r\n    Box,\r\n    makeStyles \r\n} from \"@material-ui/core\";\r\nimport { \r\n        BottonAtom,\r\n        TextFieldAtom\r\n         } from \"../../component/atoms\";\r\nimport { useForm, FieldValues } from \"react-hook-form\";\r\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\r\nimport { SelectUser } from \"../../slices/loginSlice\";\r\nimport { SelectFollowUser, getFollow } from \"../../slices/userSlice\";\r\nimport { createLorB, SelectError, setError } from \"../../slices/lorbSlice\";\r\nimport { SelectAtom } from \"../../component/atoms\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { User } from \"../../slices/userSlice\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    title:{\r\n        margin:'20px 0 0 0'\r\n    },\r\n    inputFlex:{\r\n        display:\"flex\"\r\n    },\r\n    TextFieldAtom:{\r\n        margin:'0 0 0 20px'\r\n    }\r\n})\r\n\r\n\r\n\r\nconst CreateLorB = () => {\r\n    const user = useAppSelector(SelectUser);\r\n    const error = useAppSelector(SelectError);\r\n    const followUser = useAppSelector(SelectFollowUser)\r\n    const dispatch = useAppDispatch();\r\n    const classes = useStyles();\r\n    const [selectItemsFollow, setselectItemsFollow] = useState<Array<User>>([])\r\n\r\n    useEffect(() => {\r\n        dispatch(getFollow());\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if(user && Array.isArray(followUser)){\r\n            const newUserArray = [user];\r\n            const newFollowArray = newUserArray.concat(followUser)\r\n            setselectItemsFollow(newFollowArray)\r\n        }\r\n    },[user, followUser])\r\n\r\n    const { formState:{errors} , control, getValues, handleSubmit} = useForm<FieldValues>({\r\n        mode:\"all\"\r\n    })\r\n    const onSubmit = (data:any, e:any) => {\r\n        dispatch(setError({success:''}))\r\n        const { title, select, about, userFrom, userTo } = getValues() \r\n        let userFromName = '';\r\n        let userToName = '';\r\n        let userForApprove :string= '';\r\n        if(userFrom === userTo){\r\n            dispatch(setError({success:'貸し人と借り人は一致することはありません'}))\r\n        }else {\r\n            console.log(1)\r\n            if(userFrom === user._id) {\r\n                userForApprove = userFrom;\r\n                userFromName = user.name;\r\n                const userToNamePrepare = followUser.find((user) => {\r\n                    return user._id === String(userTo)\r\n                })?.name\r\n                userToNamePrepare && (userToName = userToNamePrepare)\r\n                console.log(userToName,'To')\r\n            } else if (userTo === user._id) {\r\n                console.log(2)\r\n                userForApprove = userTo;\r\n                userToName = user.name;\r\n                const userFromNamePrepare = followUser.find((user) => {\r\n                    return user._id === String(userFrom)\r\n                })?.name\r\n                console.log(userFromNamePrepare,'準備')\r\n                userFromNamePrepare && (userFromName = userFromNamePrepare)\r\n                console.log(userFromName,'From')\r\n            }\r\n            console.log(userFromName,'From')\r\n            console.log(userToName,'To')\r\n            dispatch(createLorB({\r\n                title,\r\n                detailClass:select,\r\n                aboutDetail:about,\r\n                userTo,\r\n                userToName,\r\n                userFrom,\r\n                userFromName,\r\n                userForApprove\r\n            }))\r\n        }\r\n    }\r\n    const onError = (errors:any,e:any) => {\r\n        dispatch(setError({success:'不正な入力が存在します'}))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"sm\">\r\n                    <form onSubmit={handleSubmit(onSubmit, onError)}>\r\n\r\n                    <Box textAlign=\"center\">\r\n                        <div className={classes.title}>\r\n                                {error?.success}\r\n                                <TextFieldAtom \r\n                                        control={control} \r\n                                        errors={errors} \r\n                                        name='title'　\r\n                                        label='タイトル'\r\n                                        fullwidth={true}/>\r\n                                \r\n                        </div>\r\n\r\n                        <div>   \r\n                                <TextFieldAtom \r\n                                        control={control} \r\n                                        errors={errors} \r\n                                        name='select'\r\n                                        label='種類'\r\n                                        fullwidth={true}/>\r\n                        </div>\r\n\r\n                        <div>\r\n                                <TextFieldAtom \r\n                                        control={control} \r\n                                        errors={errors} \r\n                                        name='about'\r\n                                        label='内容'\r\n                                        fullwidth={true}/>\r\n                        </div>\r\n\r\n\r\n                        <div className={classes.inputFlex}>\r\n                                <SelectAtom \r\n                                        selectItems={selectItemsFollow}\r\n                                        control={control} \r\n                                        errors={errors} \r\n                                        name='userFrom'\r\n                                        label='貸し人ID'\r\n                                        fullwidth={true}/>\r\n\r\n                                {/* <TextFieldAtom \r\n                                        className={classes}\r\n                                        control={control} \r\n                                        errors={errors} \r\n                                        name='userFromName'\r\n                                        label='貸し人名'\r\n                                        fullwidth={true}/> */}\r\n                        </div>\r\n\r\n                        <div className={classes.inputFlex}>\r\n                                <SelectAtom \r\n                                        selectItems={selectItemsFollow}\r\n                                        control={control} \r\n                                        errors={errors} \r\n                                        name='userTo'\r\n                                        label='借り人'\r\n                                        fullwidth={true}/>\r\n                                \r\n                                {/* <TextFieldAtom \r\n                                        className={classes}\r\n                                        control={control} \r\n                                        errors={errors} \r\n                                        name='userFromName'\r\n                                        label='借り人名'\r\n                                        fullwidth={true}/> */}\r\n                                \r\n                        </div>\r\n\r\n                        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                            <BottonAtom \r\n                                    textWillShow='作成' \r\n                                    color={\"primary\"} \r\n                                    type=\"submit\"/>\r\n                        </Box>\r\n                    </Box>\r\n                    </form>\r\n                    \r\n\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CreateLorB;","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\r\nimport { \r\n    getOnMaking,\r\n    getOnBeingSuggested,\r\n    getLorBKeepLorB,\r\n    SelectOnMaking,\r\n    SelectonBeingSuggested,\r\n    SelectkeepLorB         \r\n} from \"../../slices/lorbSlice\";\r\nimport { SelectUser } from \"../../slices/loginSlice\";\r\nimport { fetchUser } from \"../../slices/loginSlice\";\r\nimport TypographyAtoms from \"../../component/atoms/TypographyAtoms\";\r\nimport { \r\n    Container, \r\n    makeStyles,\r\n    Theme,\r\n    Paper,\r\n    createStyles\r\n } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ListMolecule } from \"../../component/molecules\";\r\n\r\n\r\nconst useStyles = makeStyles((theme:Theme) => \r\n    createStyles({\r\n        list:{\r\n            padding:'10px 0 0 0'\r\n        },\r\n        box:{\r\n            textAlign:\"center\",\r\n            padding:\"0\",\r\n            justifyContent:\"center\",\r\n            fontWeight:\"bold\",\r\n            fontSize:\"18px\"\r\n        },\r\n        paper:{\r\n            color: theme.palette.text.secondary,\r\n            padding: theme.spacing(2),\r\n            margin: \"10px 0 0 0\"\r\n        },\r\n        title:{\r\n            fontWeight:\"bold\",\r\n            fontSize:\"18px\"\r\n        }\r\n    }))\r\n\r\n\r\nexport const Home = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const onMaking = useAppSelector(SelectOnMaking)\r\n    const onBeingSuggested = useAppSelector(SelectonBeingSuggested)\r\n    const keepLorB = useAppSelector(SelectkeepLorB)\r\n    const user = useAppSelector(SelectUser)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchUser())\r\n        dispatch(getOnMaking())\r\n        dispatch(getOnBeingSuggested())\r\n        dispatch(getLorBKeepLorB())\r\n    },[dispatch])\r\n\r\n    useEffect(() => {\r\n        console.log(onMaking \r\n            && (Array.isArray(onMaking) \r\n            && onMaking.count ),'作成中のやつ')\r\n        console.log(Boolean(onMaking))\r\n        console.log(Array.isArray(onMaking?.onMaking))\r\n    },[onMaking])\r\n\r\n    useEffect(() => {\r\n        console.log(user,'Home')\r\n    },[user])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                user._id &&\r\n                <Container maxWidth=\"sm\">\r\n                        <div>     \r\n                            <div className={classes.list}>\r\n                                <Paper className={classes.paper}>\r\n                                    {\r\n                                        onMaking \r\n                                        && (onMaking \r\n                                        && onMaking.count ) ?\r\n                                       <Link to='/approveCreate' style={{textDecoration: 'none'}}>\r\n                                            <TypographyAtoms \r\n                                                    variant=\"body1\" \r\n                                                    align=\"center\" \r\n                                                    className={classes.title}>\r\n                                                {`${onMaking?.count}件の貸し借り作成依頼があります`}\r\n                                            </TypographyAtoms>\r\n                                        </Link>:\r\n                                        <TypographyAtoms \r\n                                                variant=\"body1\" \r\n                                                align=\"center\" \r\n                                                className={classes.title}>\r\n                                        {'作成依頼はありません'}\r\n                                    </TypographyAtoms>\r\n                                    }\r\n\r\n                                </Paper>\r\n                            </div>  \r\n\r\n                            <div className={classes.list}>\r\n                                <Paper className={classes.paper}>\r\n                                    {\r\n                                        onBeingSuggested \r\n                                        && onBeingSuggested\r\n                                        && Boolean(onBeingSuggested.count) ?\r\n                                       <Link to='/approveNegotiate' style={{textDecoration: 'none'}}>\r\n                                            <TypographyAtoms \r\n                                                    variant=\"body1\" \r\n                                                    align=\"center\" \r\n                                                    className={classes.title}>\r\n                                                {`${onBeingSuggested?.count}件の貸し借り解消依頼があります`}\r\n                                            </TypographyAtoms>\r\n                                        </Link>:\r\n                                        <TypographyAtoms \r\n                                                variant=\"body1\" \r\n                                                align=\"center\" \r\n                                                className={classes.title}>\r\n                                        {'解消依頼はありません'}\r\n                                    </TypographyAtoms>\r\n                                    }\r\n                                </Paper>\r\n                            </div>  \r\n                        </div>\r\n\r\n                        \r\n                            {\r\n                                keepLorB && \r\n                                (\r\n                                    <>          \r\n                                        <Paper className={classes.paper}>\r\n                                                <ListMolecule \r\n                                                            willShows={keepLorB?.LKeepOn} \r\n                                                            text={`${keepLorB?.LCount}件の貸しがあります`}\r\n                                                            className={classes}\r\n                                                            root={'Lend'}\r\n                                                />\r\n                                        </Paper>\r\n\r\n                                        <Paper className={classes.paper}>\r\n                                                <ListMolecule \r\n                                                        willShows={keepLorB?.BKeepOn} \r\n                                                        text={`${keepLorB?.BCount}件の借りがあります`}\r\n                                                        className={classes}\r\n                                                        root={'Borrow'}\r\n                                                />\r\n                                        </Paper>    \r\n                                    </>\r\n                                )\r\n                            }\r\n                </Container>\r\n            }\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\n\r\nexport default Home;","import { useParams } from \"react-router\";\r\nimport { SelectkeepLorB } from \"../../slices/lorbSlice\";\r\nimport { NegotiateTemplate } from \"../../component/templates\";\r\n\r\nexport const Lend = () => {\r\n    const { id } = useParams<{id:string}>()\r\n    return (\r\n        <>\r\n            {\r\n                <NegotiateTemplate\r\n                        id={id}\r\n                        willSelect={SelectkeepLorB}\r\n                        KeeponProps=\"LKeepOn\"/>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Lend;","import {\r\n    FormBuilder\r\n} from '../../component/molecules/index';\r\nimport { useState } from 'react';\r\nimport { useForm, FieldValues } from \"react-hook-form\";\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { useAppDispatch } from '../../app/hooks';\r\nimport { loginAndFetchUser } from '../../slices/loginSlice';\r\n\r\nconst Login = () => {\r\n    interface Props {\r\n        label:string,\r\n        name:string,\r\n        errorText?:string,\r\n        pattern?:RegExp\r\n    }\r\n    const propsArray:Props[] = [\r\n        {\r\n            label:'メールアドレス',\r\n            name:'email',\r\n            errorText:'メールアドレスの形式が不正です',\r\n            pattern:/.+@.+/\r\n        },\r\n        {\r\n            label:'パスワード',\r\n            name:'password',\r\n            errorText:'パスワードの形式が不正です',\r\n            pattern:/^[a-zA-Z0-9!#$%&()*+,.:;=?@[\\]^_{}-]+$/\r\n        }\r\n    ]\r\n\r\n\r\n    const dispatch = useAppDispatch();\r\n    const history = useHistory();\r\n    const [errorState, setErrorState] = useState<string>('')\r\n\r\n    const { formState:{errors} , control, getValues} = useForm<FieldValues>({\r\n        mode:\"all\"\r\n    })\r\n\r\n    const handleFunc = () => {\r\n        const { email, password} = getValues() \r\n        dispatch(loginAndFetchUser({email, password}))\r\n        .then(() => {history.push('/')})\r\n        .catch(() => setErrorState('ログインに失敗しました'))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <p>{errorState}</p>\r\n            <FormBuilder propsArray={propsArray} \r\n                         control={control} \r\n                         errors={errors} \r\n                         handleFunc={handleFunc} \r\n                         textWillShow=\"ログイン\"\r\n            />\r\n            <Link \r\n                to='/register' \r\n                style={{textDecoration: 'none'}}\r\n            >\r\n                新規登録はこちら\r\n            </Link>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;","import { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport {\r\n    FormBuilder\r\n} from '../../component/molecules/index';\r\nimport { useForm, FieldValues } from \"react-hook-form\";\r\nimport { POST_REGIST_URL } from '../../app/commonURL'; \r\nimport axios from 'axios';\r\n\r\nconst Register = () => {\r\n\r\n    interface PropsforChild {\r\n        label:string,\r\n        name:string,\r\n        errorText?:string,\r\n        pattern?:RegExp,\r\n    }\r\n\r\n    const propsArray:PropsforChild[] = [\r\n        {\r\n            label:'名前',\r\n            name:'name',\r\n            errorText:'名前の入力が不正です'\r\n        },\r\n        {\r\n            label:'メールアドレス',\r\n            name:'email',\r\n            errorText:'メールアドレスの形式が不正です',\r\n            pattern:/.+@.+/\r\n        },\r\n        {\r\n            label:'パスワード',\r\n            name:'password',\r\n            errorText:'パスワードの形式が不正です',\r\n            pattern:/^[a-zA-Z0-9!#$%&()*+,.:;=?@[\\]^_{}-]+$/\r\n        }\r\n    ]\r\n\r\n    const [errorState, setErrorState] = useState<string>('')\r\n    const history = useHistory();\r\n    \r\n\r\n    const { formState:{errors} , control, getValues} = useForm<FieldValues>({\r\n        mode:\"all\"\r\n    })\r\n\r\n    const handleFunc = () => {\r\n        const {name, email, password} = getValues() \r\n        axios.defaults.withCredentials = true;\r\n        axios.post(POST_REGIST_URL, {\r\n            name,\r\n            email,\r\n            password\r\n        }).then(() => history.push('/login'))\r\n          .catch(() => setErrorState('登録に失敗しました'))\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <p>{errorState}</p>\r\n            <FormBuilder propsArray={propsArray} \r\n                         control={control} \r\n                         errors={errors} \r\n                         handleFunc={handleFunc}\r\n                         textWillShow=\"登録\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Register;","import { buttonArray } from \"../../component/templates/ShowListOfAnyLorB\";\r\nimport { MyPageTemplate } from \"../../component/templates\";\r\n\r\nconst buttonProps :buttonArray[]=[ \r\n    {\r\n        textWillShow:\"フォロー\",\r\n        color:\"primary\",\r\n        id:1,\r\n        propsPath:'showfollow'\r\n    },\r\n    {\r\n        textWillShow:\"フォロワー\",\r\n        color:\"primary\",\r\n        id:2,\r\n        propsPath:'showfollower'\r\n    }\r\n]\r\n\r\nexport const Mypage = () => {\r\n    \r\n\r\n    return (\r\n        <>\r\n            <MyPageTemplate buttonArrays={buttonProps}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Mypage;","import { \n  BrowserRouter as Router,\n  Switch,\n  Route\n } from 'react-router-dom';\nimport { \n  ApproveCreate,\n  ApproveNegotiate,\n  Completed,\n  CreateLorB,\n  Lend,\n  Borrow,\n  Login,\n  Register,\n  Home,\n  Mypage\n } from './pages/index';\n import { useEffect } from 'react';\n import { Header } from './component/molecules/index';\n import { fetchUser } from './slices/loginSlice';\n import { SelectUser } from './slices/loginSlice';\n import { useAppDispatch, useAppSelector } from './app/hooks';\n\nfunction App() {\n  const dispatch = useAppDispatch();\n  const user = useAppSelector(SelectUser);\n  useEffect(() => {\n    dispatch(fetchUser())\n  },[dispatch])\n\n  useEffect(() => {\n    console.log(user)\n  },[user])\n\n  return (\n    <div className=\"App\">\n      <Router>\n          <Header/>\n          <Switch>\n              <Route path=\"/mypage\"  component={Mypage} />\n              <Route path=\"/approveCreate\" exact component={ApproveCreate} />\n              <Route path=\"/approveNegotiate\" exact component={ApproveNegotiate} />\n              <Route path=\"/borrow/:id\" exact component={Borrow} />\n              <Route path=\"/completed\" exact component={Completed} />\n              <Route path=\"/createLorB\" exact component={CreateLorB} />\n              <Route path=\"/lend/:id\" exact component={Lend} />\n              <Route path=\"/login\" exact component={Login} />\n              <Route path=\"/register\" exact component={Register} />\n              <Route path=\"/\" exact component={Home} />\n          </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport loginSlice from '../slices/loginSlice';\r\nimport lorbSlice from '../slices/lorbSlice';\r\nimport userSlice from '../slices/userSlice';\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    login:loginSlice,\r\n    lorb:lorbSlice,\r\n    user:userSlice,\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.Fragment>\n    <Provider store={ store }>\n        <App />\n    </Provider>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}